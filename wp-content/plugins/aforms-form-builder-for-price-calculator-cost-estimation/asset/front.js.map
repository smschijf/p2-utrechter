{"mappings":"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","sources":["node_modules/hyperapp/src/index.js","node_modules/yubinbango-core/yubinbango-core.ts","node_modules/src/php/strings/number_format.js","src/asset/front.js","src/asset/front_component.js"],"sourcesContent":["export function h(name, attributes) {\n  var rest = []\n  var children = []\n  var length = arguments.length\n\n  while (length-- > 2) rest.push(arguments[length])\n\n  while (rest.length) {\n    var node = rest.pop()\n    if (node && node.pop) {\n      for (length = node.length; length--; ) {\n        rest.push(node[length])\n      }\n    } else if (node != null && node !== true && node !== false) {\n      children.push(node)\n    }\n  }\n\n  return typeof name === \"function\"\n    ? name(attributes || {}, children)\n    : {\n        nodeName: name,\n        attributes: attributes || {},\n        children: children,\n        key: attributes && attributes.key\n      }\n}\n\nexport function app(state, actions, view, container) {\n  var map = [].map\n  var rootElement = (container && container.children[0]) || null\n  var oldNode = rootElement && recycleElement(rootElement)\n  var lifecycle = []\n  var skipRender\n  var isRecycling = true\n  var globalState = clone(state)\n  var wiredActions = wireStateToActions([], globalState, clone(actions))\n\n  scheduleRender()\n\n  return wiredActions\n\n  function recycleElement(element) {\n    return {\n      nodeName: element.nodeName.toLowerCase(),\n      attributes: {},\n      children: map.call(element.childNodes, function(element) {\n        return element.nodeType === 3 // Node.TEXT_NODE\n          ? element.nodeValue\n          : recycleElement(element)\n      })\n    }\n  }\n\n  function resolveNode(node) {\n    return typeof node === \"function\"\n      ? resolveNode(node(globalState, wiredActions))\n      : node != null\n        ? node\n        : \"\"\n  }\n\n  function render() {\n    skipRender = !skipRender\n\n    var node = resolveNode(view)\n\n    if (container && !skipRender) {\n      rootElement = patch(container, rootElement, oldNode, (oldNode = node))\n    }\n\n    isRecycling = false\n\n    while (lifecycle.length) lifecycle.pop()()\n  }\n\n  function scheduleRender() {\n    if (!skipRender) {\n      skipRender = true\n      setTimeout(render)\n    }\n  }\n\n  function clone(target, source) {\n    var out = {}\n\n    for (var i in target) out[i] = target[i]\n    for (var i in source) out[i] = source[i]\n\n    return out\n  }\n\n  function setPartialState(path, value, source) {\n    var target = {}\n    if (path.length) {\n      target[path[0]] =\n        path.length > 1\n          ? setPartialState(path.slice(1), value, source[path[0]])\n          : value\n      return clone(source, target)\n    }\n    return value\n  }\n\n  function getPartialState(path, source) {\n    var i = 0\n    while (i < path.length) {\n      source = source[path[i++]]\n    }\n    return source\n  }\n\n  function wireStateToActions(path, state, actions) {\n    for (var key in actions) {\n      typeof actions[key] === \"function\"\n        ? (function(key, action) {\n            actions[key] = function(data) {\n              var result = action(data)\n\n              if (typeof result === \"function\") {\n                result = result(getPartialState(path, globalState), actions)\n              }\n\n              if (\n                result &&\n                result !== (state = getPartialState(path, globalState)) &&\n                !result.then // !isPromise\n              ) {\n                scheduleRender(\n                  (globalState = setPartialState(\n                    path,\n                    clone(state, result),\n                    globalState\n                  ))\n                )\n              }\n\n              return result\n            }\n          })(key, actions[key])\n        : wireStateToActions(\n            path.concat(key),\n            (state[key] = clone(state[key])),\n            (actions[key] = clone(actions[key]))\n          )\n    }\n\n    return actions\n  }\n\n  function getKey(node) {\n    return node ? node.key : null\n  }\n\n  function eventListener(event) {\n    return event.currentTarget.events[event.type](event)\n  }\n\n  function updateAttribute(element, name, value, oldValue, isSvg) {\n    if (name === \"key\") {\n    } else if (name === \"style\") {\n      if (typeof value === \"string\") {\n        element.style.cssText = value\n      } else {\n        if (typeof oldValue === \"string\") oldValue = element.style.cssText = \"\"\n        for (var i in clone(oldValue, value)) {\n          var style = value == null || value[i] == null ? \"\" : value[i]\n          if (i[0] === \"-\") {\n            element.style.setProperty(i, style)\n          } else {\n            element.style[i] = style\n          }\n        }\n      }\n    } else {\n      if (name[0] === \"o\" && name[1] === \"n\") {\n        name = name.slice(2)\n\n        if (element.events) {\n          if (!oldValue) oldValue = element.events[name]\n        } else {\n          element.events = {}\n        }\n\n        element.events[name] = value\n\n        if (value) {\n          if (!oldValue) {\n            element.addEventListener(name, eventListener)\n          }\n        } else {\n          element.removeEventListener(name, eventListener)\n        }\n      } else if (\n        name in element &&\n        name !== \"list\" &&\n        name !== \"type\" &&\n        name !== \"draggable\" &&\n        name !== \"spellcheck\" &&\n        name !== \"translate\" &&\n        !isSvg\n      ) {\n        element[name] = value == null ? \"\" : value\n      } else if (value != null && value !== false) {\n        element.setAttribute(name, value)\n      }\n\n      if (value == null || value === false) {\n        element.removeAttribute(name)\n      }\n    }\n  }\n\n  function createElement(node, isSvg) {\n    var element =\n      typeof node === \"string\" || typeof node === \"number\"\n        ? document.createTextNode(node)\n        : (isSvg = isSvg || node.nodeName === \"svg\")\n          ? document.createElementNS(\n              \"http://www.w3.org/2000/svg\",\n              node.nodeName\n            )\n          : document.createElement(node.nodeName)\n\n    var attributes = node.attributes\n    if (attributes) {\n      if (attributes.oncreate) {\n        lifecycle.push(function() {\n          attributes.oncreate(element)\n        })\n      }\n\n      for (var i = 0; i < node.children.length; i++) {\n        element.appendChild(\n          createElement(\n            (node.children[i] = resolveNode(node.children[i])),\n            isSvg\n          )\n        )\n      }\n\n      for (var name in attributes) {\n        updateAttribute(element, name, attributes[name], null, isSvg)\n      }\n    }\n\n    return element\n  }\n\n  function updateElement(element, oldAttributes, attributes, isSvg) {\n    for (var name in clone(oldAttributes, attributes)) {\n      if (\n        attributes[name] !==\n        (name === \"value\" || name === \"checked\"\n          ? element[name]\n          : oldAttributes[name])\n      ) {\n        updateAttribute(\n          element,\n          name,\n          attributes[name],\n          oldAttributes[name],\n          isSvg\n        )\n      }\n    }\n\n    var cb = isRecycling ? attributes.oncreate : attributes.onupdate\n    if (cb) {\n      lifecycle.push(function() {\n        cb(element, oldAttributes)\n      })\n    }\n  }\n\n  function removeChildren(element, node) {\n    var attributes = node.attributes\n    if (attributes) {\n      for (var i = 0; i < node.children.length; i++) {\n        removeChildren(element.childNodes[i], node.children[i])\n      }\n\n      if (attributes.ondestroy) {\n        attributes.ondestroy(element)\n      }\n    }\n    return element\n  }\n\n  function removeElement(parent, element, node) {\n    function done() {\n      parent.removeChild(removeChildren(element, node))\n    }\n\n    var cb = node.attributes && node.attributes.onremove\n    if (cb) {\n      cb(element, done)\n    } else {\n      done()\n    }\n  }\n\n  function patch(parent, element, oldNode, node, isSvg) {\n    if (node === oldNode) {\n    } else if (oldNode == null || oldNode.nodeName !== node.nodeName) {\n      var newElement = createElement(node, isSvg)\n      parent.insertBefore(newElement, element)\n\n      if (oldNode != null) {\n        removeElement(parent, element, oldNode)\n      }\n\n      element = newElement\n    } else if (oldNode.nodeName == null) {\n      element.nodeValue = node\n    } else {\n      updateElement(\n        element,\n        oldNode.attributes,\n        node.attributes,\n        (isSvg = isSvg || node.nodeName === \"svg\")\n      )\n\n      var oldKeyed = {}\n      var newKeyed = {}\n      var oldElements = []\n      var oldChildren = oldNode.children\n      var children = node.children\n\n      for (var i = 0; i < oldChildren.length; i++) {\n        oldElements[i] = element.childNodes[i]\n\n        var oldKey = getKey(oldChildren[i])\n        if (oldKey != null) {\n          oldKeyed[oldKey] = [oldElements[i], oldChildren[i]]\n        }\n      }\n\n      var i = 0\n      var k = 0\n\n      while (k < children.length) {\n        var oldKey = getKey(oldChildren[i])\n        var newKey = getKey((children[k] = resolveNode(children[k])))\n\n        if (newKeyed[oldKey]) {\n          i++\n          continue\n        }\n\n        if (newKey != null && newKey === getKey(oldChildren[i + 1])) {\n          if (oldKey == null) {\n            removeElement(element, oldElements[i], oldChildren[i])\n          }\n          i++\n          continue\n        }\n\n        if (newKey == null || isRecycling) {\n          if (oldKey == null) {\n            patch(element, oldElements[i], oldChildren[i], children[k], isSvg)\n            k++\n          }\n          i++\n        } else {\n          var keyedNode = oldKeyed[newKey] || []\n\n          if (oldKey === newKey) {\n            patch(element, keyedNode[0], keyedNode[1], children[k], isSvg)\n            i++\n          } else if (keyedNode[0]) {\n            patch(\n              element,\n              element.insertBefore(keyedNode[0], oldElements[i]),\n              keyedNode[1],\n              children[k],\n              isSvg\n            )\n          } else {\n            patch(element, oldElements[i], null, children[k], isSvg)\n          }\n\n          newKeyed[newKey] = children[k]\n          k++\n        }\n      }\n\n      while (i < oldChildren.length) {\n        if (getKey(oldChildren[i]) == null) {\n          removeElement(element, oldElements[i], oldChildren[i])\n        }\n        i++\n      }\n\n      for (var i in oldKeyed) {\n        if (!newKeyed[i]) {\n          removeElement(element, oldKeyed[i][0], oldKeyed[i][1])\n        }\n      }\n    }\n    return element\n  }\n}\n","let CACHE = [];\nmodule YubinBango {\n  export class Core {\n    URL = 'https://yubinbango.github.io/yubinbango-data/data';\n    REGION: string[] = [\n      null, '北海道', '青森県', '岩手県', '宮城県',\n      '秋田県', '山形県', '福島県', '茨城県', '栃木県',\n      '群馬県', '埼玉県', '千葉県', '東京都', '神奈川県',\n      '新潟県', '富山県', '石川県', '福井県', '山梨県',\n      '長野県', '岐阜県', '静岡県', '愛知県', '三重県',\n      '滋賀県', '京都府', '大阪府', '兵庫県', '奈良県',\n      '和歌山県', '鳥取県', '島根県', '岡山県', '広島県',\n      '山口県', '徳島県', '香川県', '愛媛県', '高知県',\n      '福岡県', '佐賀県', '長崎県', '熊本県', '大分県',\n      '宮崎県', '鹿児島県', '沖縄県'\n    ];\n    constructor(inputVal: string = '', callback?) {\n      if(inputVal){\n        // 全角の数字を半角に変換 ハイフンが入っていても数字のみの抽出\n        const a:string = inputVal.replace(/[０-９]/g, (s: string) => String.fromCharCode(s.charCodeAt(0) - 65248));\n        const b:RegExpMatchArray = a.match(/\\d/g);\n        const c:string = b.join('');\n        const yubin7: string = this.chk7(c);\n        // 7桁の数字の時のみ作動\n        if (yubin7) {\n          this.getAddr(yubin7, callback);\n        } else {\n          callback(this.addrDic());\n        }\n      }\n    }\n    chk7(val: string) {\n      if (val.length === 7) {\n        return val;\n      }\n    }\n    addrDic(region_id = '', region = '', locality = '', street = '', extended = ''):{[key:string]: string} {\n      return {\n        'region_id': region_id,\n        'region': region,\n        'locality': locality,\n        'street': street,\n        'extended': extended\n      };\n    }\n    selectAddr(addr: string[]):{[key:string]: string} {\n      if (addr && addr[0] && addr[1]) {\n        return this.addrDic(addr[0],this.REGION[addr[0]],addr[1],addr[2],addr[3])\n      } else {\n        return this.addrDic()\n      }\n    }\n    jsonp(url: string, fn) {\n      window['$yubin'] = (data) => fn(data);\n      const scriptTag = document.createElement(\"script\");\n      scriptTag.setAttribute(\"type\", \"text/javascript\");\n      scriptTag.setAttribute(\"charset\", \"UTF-8\");\n      scriptTag.setAttribute(\"src\", url);\n      document.head.appendChild(scriptTag);\n    }\n    getAddr(yubin7: string, fn):{[key:string]: string} {\n      const yubin3 = yubin7.substr(0, 3);\n      // 郵便番号上位3桁でキャッシュデータを確認\n      if (yubin3 in CACHE && yubin7 in CACHE[yubin3]) {\n        return fn(this.selectAddr(CACHE[yubin3][yubin7]));\n      } else {\n        this.jsonp(`${this.URL}/${yubin3}.js`, (data) => {\n          CACHE[yubin3] = data;\n          return fn(this.selectAddr(data[yubin7]));\n        });\n      }\n    }\n  }\n}\n\nexport = YubinBango;\n","module.exports = function number_format (number, decimals, decPoint, thousandsSep) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/number_format/\n  // original by: Jonas Raoni Soares Silva (https://www.jsfromhell.com)\n  // improved by: Kevin van Zonneveld (https://kvz.io)\n  // improved by: davook\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Kevin van Zonneveld (https://kvz.io)\n  // bugfixed by: Michael White (https://getsprink.com)\n  // bugfixed by: Benjamin Lupton\n  // bugfixed by: Allan Jensen (https://www.winternet.no)\n  // bugfixed by: Howard Yeend\n  // bugfixed by: Diogo Resende\n  // bugfixed by: Rival\n  // bugfixed by: Brett Zamir (https://brett-zamir.me)\n  //  revised by: Jonas Raoni Soares Silva (https://www.jsfromhell.com)\n  //  revised by: Luke Smith (https://lucassmith.name)\n  //    input by: Kheang Hok Chin (https://www.distantia.ca/)\n  //    input by: Jay Klehr\n  //    input by: Amir Habibi (https://www.residence-mixte.com/)\n  //    input by: Amirouche\n  //   example 1: number_format(1234.56)\n  //   returns 1: '1,235'\n  //   example 2: number_format(1234.56, 2, ',', ' ')\n  //   returns 2: '1 234,56'\n  //   example 3: number_format(1234.5678, 2, '.', '')\n  //   returns 3: '1234.57'\n  //   example 4: number_format(67, 2, ',', '.')\n  //   returns 4: '67,00'\n  //   example 5: number_format(1000)\n  //   returns 5: '1,000'\n  //   example 6: number_format(67.311, 2)\n  //   returns 6: '67.31'\n  //   example 7: number_format(1000.55, 1)\n  //   returns 7: '1,000.6'\n  //   example 8: number_format(67000, 5, ',', '.')\n  //   returns 8: '67.000,00000'\n  //   example 9: number_format(0.9, 0)\n  //   returns 9: '1'\n  //  example 10: number_format('1.20', 2)\n  //  returns 10: '1.20'\n  //  example 11: number_format('1.20', 4)\n  //  returns 11: '1.2000'\n  //  example 12: number_format('1.2000', 3)\n  //  returns 12: '1.200'\n  //  example 13: number_format('1 000,50', 2, '.', ' ')\n  //  returns 13: '100 050.00'\n  //  example 14: number_format(1e-8, 8, '.', '')\n  //  returns 14: '0.00000001'\n\n  number = (number + '').replace(/[^0-9+\\-Ee.]/g, '')\n  const n = !isFinite(+number) ? 0 : +number\n  const prec = !isFinite(+decimals) ? 0 : Math.abs(decimals)\n  const sep = (typeof thousandsSep === 'undefined') ? ',' : thousandsSep\n  const dec = (typeof decPoint === 'undefined') ? '.' : decPoint\n  let s = ''\n\n  const toFixedFix = function (n, prec) {\n    if (('' + n).indexOf('e') === -1) {\n      return +(Math.round(n + 'e+' + prec) + 'e-' + prec)\n    } else {\n      const arr = ('' + n).split('e')\n      let sig = ''\n      if (+arr[1] + prec > 0) {\n        sig = '+'\n      }\n      return (+(Math.round(+arr[0] + 'e' + sig + (+arr[1] + prec)) + 'e-' + prec)).toFixed(prec)\n    }\n  }\n\n  // @todo: for IE parseFloat(0.55).toFixed(0) = 0;\n  s = (prec ? toFixedFix(n, prec).toString() : '' + Math.round(n)).split('.')\n  if (s[0].length > 3) {\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep)\n  }\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || ''\n    s[1] += new Array(prec - s[1].length + 1).join('0')\n  }\n\n  return s.join(dec)\n}\n","\r\nimport { h, app } from 'hyperapp';\r\nimport { Core as YubinBangoCore } from 'yubinbango-core';\r\nimport number_format from 'locutus/php/strings/number_format';\r\nimport { tnOnCreate, tnOnRemove, Image, TextInput, TextArea, RadioButton, Checkbox, Select, Range, Echo, Button, InputGroup, Control, FileInput, File } from './front_component';\r\n\r\n\r\n/*\r\n * Polyfills\r\n */\r\nMath.trunc = Math.trunc || function(x) {\r\n  return x < 0 ? Math.ceil(x) : Math.floor(x);\r\n}\r\n\r\n/*\r\n * ===============================================================\r\n * utilities\r\n */\r\n\r\nfunction sprintf(format) {\r\n  var args = arguments;\r\n  var offset = 1;\r\n  return format.replace(/%([0-9]\\$)?([^0-9])/g, function (match, f1, f2) {\r\n    if (f2 == '%') {\r\n      return '%';\r\n    } else if (f2 == 's') {\r\n      if (! f1) {\r\n        return args[offset++];\r\n      } else {\r\n        return args[f1.slice(0, 1)];\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nconst nf = (amount) => {\r\n  return number_format(amount, rule.taxPrecision, catalog['.'], catalog[',']);\r\n}\r\n\r\nconst br = {nodeName:'br', attributes:{}, children:[]}\r\n\r\nconst _Tv = (x) => {\r\n  x = _T(x)\r\n  if (typeof x != 'string') return x\r\n\r\n  const lines = x.split('\\n')\r\n  if (lines.length == 1) return lines[0]\r\n  \r\n  return lines.reduce((cur, line) => {\r\n    return (cur.length == 0) ? [line] : [...cur, br, line]\r\n  }, [])\r\n}\r\n\r\nconst _T = (x) => {\r\n  if (typeof x == 'undefined' || x === null) return null\r\n  if (catalog.hasOwnProperty(x)) {\r\n    return catalog[x]\r\n  } else {\r\n    console.log('TO TRANSLATE: ', x);\r\n    return x;\r\n  }\r\n}\r\n\r\nconst evalExpr = (ast, vars, total, data, labels, env, expr) => {\r\n  if (typeof ast == 'number' && ! isNaN(ast)) {\r\n    // common easy case\r\n    return ast\r\n  }\r\n\r\n  const guard = (val) => {\r\n    if (! isFinite(val)) {  // either NaN or +-INF\r\n      throw 'evaluation error: overflow in %s'\r\n    }\r\n    return val\r\n  }\r\n  const evl = (ast) => {\r\n    if (typeof ast == 'number') {  // literal\r\n      return ast\r\n    } else if (typeof ast == 'string') {  // variable lookup\r\n      const v = findByProp('sym', ast, vars)\r\n      if (! v) {\r\n        throw 'evaluation error: no-variable in %s'\r\n      }\r\n      if (v.ref == -1) return total\r\n      const q = +findQuantity(data, v.ref, labels, env)\r\n      if (isNaN(q)) {\r\n        throw 'evaluation error: no-quantity in %s'\r\n      }\r\n      return q\r\n    } else if (Array.isArray(ast)) {  // function application\r\n      switch (ast[0]) {\r\n        case '+': \r\n          return guard(evl(ast[1]) + evl(ast[2]))\r\n        case '-': \r\n          return guard(evl(ast[1]) - evl(ast[2]))\r\n        case '*': \r\n          return guard(evl(ast[1]) * evl(ast[2]))\r\n        case '/': \r\n        {\r\n          const b = evl(ast[2])\r\n          if (b == 0) throw 'evaluation error: undefined-calculation in %s'\r\n          return guard(evl(ast[1]) / b)\r\n        }\r\n        case '^': \r\n          return guard(evl(ast[1]) ** evl(ast[2]))\r\n        case 'IFERROR': \r\n          try {\r\n            return evl(ast[1])\r\n          } catch (ex) {\r\n            return evl(ast[2])\r\n          }\r\n        case 'ROUND': \r\n        {\r\n          const a = evl(ast[1])\r\n          const b = Math.pow(10, Math.trunc(evl(ast[2])))\r\n          const c = a * b\r\n          return guard((c < 0 ? -1*Math.round(-1*c) : Math.round(c)) / b)\r\n        }\r\n        case 'ROUNDUP':  // align to +- infinity\r\n        {\r\n          const a = evl(ast[1])\r\n          const b = Math.pow(10, Math.trunc(evl(ast[2])))\r\n          const c = a * b\r\n          return guard((c < 0 ? Math.floor(c) : Math.ceil(c)) / b)\r\n        }\r\n        case 'ROUNDDOWN':  // align to zero\r\n        {\r\n          const a = evl(ast[1])\r\n          const b = Math.pow(10, Math.trunc(evl(ast[2])))\r\n          return guard(Math.trunc(a * b) / b)\r\n        }\r\n        case 'TRUNC':  // align to zero\r\n        {\r\n          const a = evl(ast[1])\r\n          const b0 = ast.length == 3 ? Math.trunc(evl(ast[2])) : 0\r\n          const b = Math.pow(10, b0)\r\n          return guard(Math.trunc(a * b) / b)\r\n        }\r\n        case 'INT':  // align to negative infinity\r\n        {\r\n          const a = evl(ast[1])\r\n          return guard(Math.floor(a))\r\n        }\r\n        case 'ABS': \r\n        {\r\n          const a = evl(ast[1])\r\n          return guard(a < 0 ? -1 * a : a)\r\n        }\r\n        case 'SIGN': \r\n        {\r\n          const a = evl(ast[1])\r\n          return guard(a < 0 ? -1 : a > 0 ? 1 : 0)\r\n        }\r\n        case 'QUOTIENT':  // align to zero\r\n        {\r\n          const b = evl(ast[2])\r\n          if (b == 0) throw 'evaluation error: undefined-calculation in %s'\r\n          return guard(Math.trunc(evl(ast[1]) / b))\r\n        }\r\n        case 'MOD':  // MOD(n, d) == n - d * INT(n / d)\r\n        {\r\n          const d = evl(ast[2])\r\n          if (d == 0) throw 'evaluation error: undefined-calculation in %s'\r\n          const n = evl(ast[1])\r\n          return guard(n - d * Math.floor(n/d))\r\n        }\r\n        case 'MIN': \r\n        {\r\n          let a = evl(ast[1])\r\n          for (let i = 2; i < ast.length; i++) {\r\n            const b = evl(ast[i])\r\n            if (b < a) a = b\r\n          }\r\n          return a\r\n        }\r\n        case 'MAX': \r\n        {\r\n          let a = evl(ast[1])\r\n          for (let i = 2; i < ast.length; i++) {\r\n            const b = evl(ast[i])\r\n            if (b > a) a = b\r\n          }\r\n          return a\r\n        }\r\n        case 'SWITCH':  // [SWITCH, x, m1, e1, ..., else?]\r\n        {\r\n          const a = evl(ast[1])\r\n          let i = 2\r\n          for (; i < ast.length - 1; i += 2) {\r\n            const b = evl(ast[i])\r\n            if (a == b) return evl(ast[i + 1])\r\n          }\r\n          if (i != ast.length) {\r\n            // there else clause\r\n            return evl(ast[i])\r\n          } else {\r\n            throw 'evaluation error: no matching clause in %s'\r\n          }\r\n        }\r\n        default: \r\n          throw 'evaluation error: no-function in %s'\r\n      }\r\n    } else {  // unkdnown\r\n      throw 'evaluation error: unknown-term in %s'\r\n    }\r\n  }\r\n\r\n  try {\r\n    return evl(ast)\r\n  } catch (ex) {\r\n    const msg = sprintf(_T(ex), expr)\r\n    if (mode == 'preview') {\r\n      alert(msg)\r\n    } else {\r\n      console.log('[AForms] '+msg)\r\n    }\r\n    return NaN\r\n  }\r\n}\r\n\r\nconst scrollTo = (id) => {\r\n  const pos = document.documentElement.scrollTop || document.body.scrollTop;\r\n  const r = document.getElementById(id).getBoundingClientRect()\r\n  const posBot = r.top + pos - 100\r\n  const posTop = r.top + pos - 150\r\n  if (posTop > pos) {\r\n    if (behavior.smoothScroll) {\r\n      const diff = Math.max((posTop - pos) / 8, 4)\r\n      window.requestAnimationFrame(() => scrollTo(id))\r\n      window.scrollTo(0, pos + diff)\r\n    } else {\r\n      window.scrollTo(0, posTop)\r\n    }\r\n  } else if (posBot < pos) {\r\n    if (behavior.smoothScroll) {\r\n      const diff = Math.max((pos - posBot) / 8, 4)\r\n      window.requestAnimationFrame(() => scrollTo(id))\r\n      window.scrollTo(0, pos - diff)\r\n    } else {\r\n      window.scrollTo(0, posBot)\r\n    }\r\n  }\r\n};\r\n\r\nconst focusErrorInput = (prefix, ms) => {\r\n  const ids = Object.keys(ms)\r\n  if (ids.length == 0) return;\r\n  const name = '.'+prefix+ids[0]\r\n  let elem = document.querySelector(name);\r\n  if (! elem) {\r\n    elem = document.querySelector('.wq-Button.wq-belongs-wnavbase')\r\n  }\r\n  console.log('focusErrorInput', prefix, ids[0], elem)\r\n  if (elem != null) {\r\n    elem.focus();\r\n    return;\r\n  }\r\n}\r\n\r\nconst findByProp = (name, val, arr) => {\r\n  const len = arr.length\r\n  for (let i = 0; i < len; i++) {\r\n    if (arr[i][name] == val) return arr[i]\r\n  }\r\n  return undefined\r\n}\r\n\r\nconst findIndexByProp = (name, val, arr) => {\r\n  const len = arr.length\r\n  for (let i = 0; i < len; i++) {\r\n    if (arr[i][name] == val) return i\r\n  }\r\n  return -1\r\n}\r\n\r\nconst satisfied = (set, specs) => {\r\n  for (let prop in specs) {\r\n    if (specs[prop] != set.hasOwnProperty(prop)) return false\r\n  }\r\n  return true\r\n}\r\n\r\nconst extend = (set, specs) => {\r\n  const copy = {...set}\r\n  for (let prop in specs) {\r\n    if (specs[prop]) {\r\n      copy[prop] = true\r\n    } else {\r\n      delete copy[prop]\r\n    }\r\n  }\r\n  return copy\r\n}\r\n\r\nconst exclude = (set, prop) => {\r\n  const copy = {...set}\r\n  delete copy[prop]\r\n  return copy\r\n}\r\n\r\nconst branchNo = (name, sep) => {\r\n  const off = name.lastIndexOf(sep)\r\n  const fragment = name.slice(off + 1)\r\n  return parseInt(fragment)\r\n}\r\n\r\nconst replaceElement = (arr, idx, value) => {\r\n  const arr2 = [...arr]\r\n  arr2[idx] = value\r\n  return arr2\r\n}\r\n\r\nconst indexOf = (e, lis) => {\r\n  const len = lis.length\r\n  for (let i = 0; i < len; i++) {\r\n    if (lis[i] == e) return i\r\n  }\r\n  return -1\r\n}\r\n\r\nconst reduceHash = (f, cur, hash) => {\r\n  for (let key in hash) {\r\n    cur = f(cur, key, hash[key])\r\n  }\r\n  return cur\r\n}\r\n\r\n/*const mapHash = (f, hash) => {\r\n  const rv = {}\r\n  for (let key in hash) {\r\n    rv[key] = f(key, hash[key])\r\n  }\r\n  return rv\r\n}*/\r\n\r\nconst emptyString = (s) => (s == \"\")\r\n\r\nconst fromTo = (from, to, step) => {\r\n  const arr = []\r\n  for (let i = from; i <= to; i += step) {\r\n    arr.push(i)\r\n  }\r\n  return arr\r\n}\r\n\r\nconst normalizePrice = (rule, price) => {\r\n  price = price * Math.pow(10, rule.taxPrecision)\r\n  switch (rule.taxNormalizer) {\r\n    case 'trunc': price = Math.trunc(price); break;\r\n    case 'floor': price = Math.floor(price); break;\r\n    case 'ceil':  price = Math.ceil(price); break;\r\n    case 'round': price = Math.round(price); break;\r\n  }\r\n  return price / Math.pow(10, rule.taxPrecision)\r\n}\r\n\r\nconst compare2 = (value, lower, lowerIncluded, higher, higherIncluded) => {\r\n  if (lower != null) {\r\n    if (lowerIncluded) {\r\n      if (value < lower) return false;\r\n    } else {\r\n      if (value <= lower) return false;\r\n    }\r\n  }\r\n  if (higher != null) {\r\n    if (higherIncluded) {\r\n      if (value > higher) return false;\r\n    } else {\r\n      if (value >= higher) return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nconst submit = (data, k) => {\r\n  //console.log('submit', submitType);\r\n  jQuery.ajax({\r\n    type: \"post\", \r\n    url: submitUrl, \r\n    data: JSON.stringify(data), \r\n    contentType: 'application/json',\r\n    success: function(response) {\r\n      k(response)\r\n    }, \r\n    error: function (xhr) {\r\n      const msg = (xhr.status === 403) ? _T('Failed to submit due to authorization failure.') : _T('Failed to submit due to some error.')\r\n      window.alert(msg)\r\n    }, \r\n    dataType: 'json'\r\n  });\r\n}\r\n\r\nconst submitCustom = (data, k, id) => {\r\n  const url = customUrl.replace('placeholder', id)\r\n  jQuery.ajax({\r\n    type: \"post\", \r\n    url, \r\n    data: JSON.stringify(data), \r\n    contentType: 'application/json', \r\n    success: function (response) {\r\n      k(response)\r\n    }, \r\n    error: function (xhr) {\r\n      const msg = (xhr.status === 403) ? _T('Failed to submit due to authorization failure.') : _T('Failed to submit due to some error.')\r\n      window.alert(msg)\r\n    }, \r\n    dataType: 'json'\r\n  });\r\n}\r\n\r\nconst complementAddress = (zip, k) => {\r\n  new YubinBangoCore(zip.replace('-', ''), k)\r\n}\r\n\r\nconst findQuantity = (inputs, qid, labels, env) => {\r\n  if (qid == -1) return 1\r\n  const item = findByProp(\"id\", qid, form.detailItems)\r\n  if (item.type == 'Quantity' || item.type == 'Slider') {\r\n    if (! satisfied(labels, item.depends)) return NaN\r\n    return inputs.hasOwnProperty(qid) ? inputs[qid] : item.initial\r\n  } else if (item.type == 'AutoQuantity') {\r\n    return env.hasOwnProperty(qid) ? env[qid] : NaN\r\n  }\r\n}\r\n\r\n/*\r\n * ===============================================================\r\n * view \r\n */\r\n\r\nconst Option = (\r\n    {\r\n      type, \r\n      checked, \r\n      labels, \r\n      selectid, \r\n      option, \r\n      onchange, \r\n      navigator\r\n    }) => {\r\n  const id = `wq-option-detail-${selectid}-${option.id}`\r\n  const iname = `detail-${selectid}`\r\n  const enabled = satisfied(labels, option.depends)\r\n  return (\r\n    <div class={`wq-Option wq-belongs-${navigator} wq-belongs-selector-${selectid} ${option.image ? '' : 'wq-media-empty'}`} key={id} id={id+'-wrapper'}>\r\n      <input type={type} id={id} checked={checked} class={`wq--input wq_${iname} wq-type-${type} ${checked ? 'wq-is-selected' : ''}`} name={iname} onchange={onchange} data-path={selectid+'/'+option.id} value=\"true\" disabled={! enabled} />\r\n      <label for={id} class=\"wq--label\">\r\n        <div class=\"wq--media\">\r\n          <Image src={option.image} scaling=\"center\" xclass={`wq-belongs-${navigator} wq-belongs-option`} />\r\n        </div>\r\n        <div class=\"wq--main\">\r\n          <div class=\"wq--name\">{option.name}</div>\r\n          <div class=\"wq--note\">{option.note}</div>\r\n          <div class=\"wq--prices\">\r\n            {typeof option.normalPrice == \"number\" ? (<span class=\"wq--normalPrice\">{pricePrefix}{nf(option.normalPrice)}{priceSuffix}</span>) : null}\r\n            {typeof option.price == \"number\" ? (<span class=\"wq--price\">{pricePrefix}{nf(option.price)}{priceSuffix}</span>) : null}\r\n          </div>\r\n        </div>\r\n        {['SALE', 'RECOMMENDED'].map((r,i) => option.ribbons[r] ? (\r\n          <div class={`wq--ribbon wq-ribbon-${i+1}`}><span>{_Tv(r)}</span></div>\r\n        ) : null)}\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst QuantOption = (\r\n    {\r\n      type, \r\n      value, \r\n      labels, \r\n      selectid, \r\n      option, \r\n      onchange, \r\n      navigator\r\n    }) => {\r\n  const id = `wq-quantoption-detail-${selectid}-${option.id}`\r\n  const iname = `detail-${selectid}`\r\n  const enabled = satisfied(labels, option.depends)\r\n  return (\r\n    <div class={`wq-Option wq-belongs-${navigator} wq-belongs-selector-${selectid} wq-type-QuantOption ${option.image ? '' : 'wq-media-empty'}`} key={id} id={id+'-wrapper'}>\r\n      <select id={id} class={`wq--select wq_${iname} ${typeof value == 'string' || typeof value == 'number' ? 'wq-is-selected' : ''} wq-type-${type}`} name={iname} onchange={onchange} disabled={!enabled} data-path={selectid+'/'+option.id}>\r\n        <option value=\"\">{_T('Deselect')}</option>\r\n        {fromTo(option.minimum, option.maximum, option.step).map(v => {\r\n          return (\r\n            <option value={v} selected={v == value}>{v} {option.suffix}</option>\r\n          )\r\n        })}\r\n      </select>\r\n      <label for={id} class=\"wq--label\">\r\n        <div class=\"wq--media\">\r\n          <Image src={option.image} scaling=\"center\" xclass={`wq-belongs-${navigator} wq-belongs-option`} />\r\n        </div>\r\n        <div class=\"wq--main\">\r\n          <div class=\"wq--name\">{option.name}</div>\r\n          <div class=\"wq--note\">{option.note}</div>\r\n          <div class=\"wq--prices\">\r\n            {typeof option.normalPrice == \"number\" ? (<span class=\"wq--normalPrice\">{pricePrefix}{nf(option.normalPrice)}{priceSuffix}</span>) : null}\r\n            {typeof option.price == \"number\" ? (<span class=\"wq--price\">{pricePrefix}{nf(option.price)}{priceSuffix}</span>) : null}\r\n          </div>\r\n          {typeof value == 'string' || typeof value == 'number' ? (<div class=\"wq--quantity\">{value}</div>) : null}\r\n        </div>\r\n        {['SALE', 'RECOMMENDED'].map((r,i) => option.ribbons[r] ? (\r\n          <div class={`wq--ribbon wq-ribbon-${i+1}`}><span>{_Tv(r)}</span></div>\r\n        ) : null)}\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Selector = (\r\n    {\r\n      selector, \r\n      onoptionchange, \r\n      selectedOptions, \r\n      labels, \r\n      message, \r\n      navigator\r\n    }\r\n) => {\r\n  const id = `wq-selector-detail-${selector.id}`\r\n  const type = selector.multiple ? 'checkbox' : 'radio'\r\n  return (\r\n    <div class={`wq-Selector wq-lct-enabled ${!!message ? 'wq-is-invalid' : ''} wq-belongs-${navigator}`} key={id} id={id} oncreate={tnOnCreate} onremove={tnOnRemove}>\r\n      <div class=\"wq--head\">\r\n        <div class=\"wq--media\">\r\n          <Image src={selector.image} scaling=\"center\" xclass={`wq-belongs-${navigator} wq-belongs-selector`} />\r\n        </div>\r\n        <div class=\"wq--main\">\r\n          <div class=\"wq--name\">{selector.name}</div>\r\n          <div class=\"wq--note\">{selector.note}</div>\r\n        </div>\r\n        {(message) ? (<div class=\"wq--message wq-lct-enabled\" oncreate={tnOnCreate} onremove={tnOnRemove}>{_Tv(message)}</div>) : null}\r\n      </div>\r\n      <div class=\"wq--body\">\r\n        {selector.options.map((option, i) => {\r\n          if (option.type == 'Option') {\r\n            return (\r\n              <Option type={type} checked={selectedOptions.hasOwnProperty(option.id)} selectid={selector.id} onchange={onoptionchange} option={option} labels={labels} navigator={navigator} />\r\n            )\r\n          } else {  // QuantOption\r\n            return (\r\n              <QuantOption type={type} value={selectedOptions[option.id]} selectid={selector.id} onchange={onoptionchange} option={option} labels={labels} navigator={navigator} />\r\n            )\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Quantity = (\r\n    {\r\n      quantity, \r\n      value, \r\n      message, \r\n      oninput, \r\n      onblur, \r\n      navigator\r\n    }\r\n) => {\r\n  const id = `wq-quantity-detail-${quantity.id}`\r\n  const iname = `detail-${quantity.id}`\r\n  return (\r\n    <div class={`wq-Quantity wq-lct-enabled ${!!message ? 'wq-is-invalid' : ''} wq-belongs-${navigator}`} id={id} oncreate={tnOnCreate} onremove={tnOnRemove}>\r\n      <div class=\"wq--head\">\r\n        <div class=\"wq--media\">\r\n          <Image src={quantity.image} scaling=\"center\" xclass={`wq-belongs-${navigator} wq-belongs-quantity`} />\r\n        </div>\r\n        <div class=\"wq--main\">\r\n          <div class=\"wq--name\">{quantity.name}</div>\r\n          <div class=\"wq--note\">{quantity.note}</div>\r\n        </div>\r\n        {(message) ? (<div class=\"wq--message wq-lct-enabled\" oncreate={tnOnCreate} onremove={tnOnRemove}>{_Tv(message)}</div>) : null}\r\n      </div>\r\n      <div class=\"wq--body\">\r\n        <InputGroup gutter=\"mini\">\r\n          <TextInput type=\"number\" size=\"small\" name={iname} value={value} placeholder={null} invalid={!!message} oninput={oninput} onblur={onblur} />\r\n          {quantity.suffix ? (<span class=\"wq--suffix\">{quantity.suffix}</span>) : null}\r\n        </InputGroup>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Slider = (\r\n    {\r\n      slider, \r\n      value, \r\n      message, \r\n      oninput, \r\n      onchange, \r\n      navigator\r\n    }\r\n) => {\r\n  const id = `wq-slider-detail-${slider.id}`\r\n  const iname = `detail-${slider.id}`\r\n  return (\r\n    <div class={`wq-Slider wq-lct-enabled ${!!message ? 'wq-is-invalid' : ''} wq-belongs-${navigator}`} id={id} oncreate={tnOnCreate} onremove={tnOnRemove}>\r\n      <div class=\"wq--head\">\r\n        <div class=\"wq--media\">\r\n          <Image src={slider.image} scaling=\"center\" xclass={`wq-belongs-${navigator} wq-belongs-slider`} />\r\n        </div>\r\n        <div class=\"wq--main\">\r\n          <div class=\"wq--name\">{slider.name}</div>\r\n          <div class=\"wq--note\">{slider.note}</div>\r\n        </div>\r\n        {(message) ? (<div class=\"wq--message wq-lct-enabled\" oncreate={tnOnCreate} onremove={tnOnRemove}>{_Tv(message)}</div>) : null}\r\n      </div>\r\n      <div class=\"wq--body\">\r\n        <Range name={iname} value={value} max={slider.maximum} min={slider.minimum} step={slider.step} invalid={!!message} suffix={slider.suffix} oninput={oninput} onchange={onchange} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst HNavigator = (\r\n    {\r\n      data, \r\n      onoptionchange, \r\n      ontextinput, \r\n      ontextblur, \r\n      onrangeblur, \r\n      labels, \r\n      messages\r\n    }, children) => {\r\n  const id = 'wq-hnavigator'\r\n  return (\r\n    <div class=\"wq-HNavigator\" id={id} key={id}>\r\n      {children}\r\n      <div class=\"wq--items\">\r\n        {form.detailItems.map((item) => {\r\n          const message = messages.hasOwnProperty(item.id) ? messages[item.id] : null\r\n          if (item.type == 'Selector') {\r\n            if (item.options.some(option => satisfied(labels, option.depends))) {\r\n              const selectedOptions = data.hasOwnProperty(item.id) ? data[item.id] : {}\r\n              return (\r\n                <Selector selector={item} onoptionchange={onoptionchange} selectedOptions={selectedOptions} labels={labels} message={message} navigator=\"hnavigator\" />\r\n              )\r\n            } else {\r\n              return null\r\n            }\r\n          } else if (item.type == 'Quantity') {\r\n            if (satisfied(labels, item.depends)) {\r\n              const value = data.hasOwnProperty(item.id) ? data[item.id] : ''\r\n              return (\r\n                <Quantity quantity={item} value={value} message={message} oninput={ontextinput} onblur={ontextblur} navigator=\"hnavigator\" />\r\n              )\r\n            } else {\r\n              return null\r\n            }\r\n          } else if (item.type == \"Slider\") {\r\n            if (satisfied(labels, item.depends)) {\r\n              const value = data.hasOwnProperty(item.id) ? data[item.id] : ''\r\n              return (\r\n                <Slider slider={item} value={value} message={message} navigator=\"hnavigator\" oninput={ontextinput} onchange={onrangeblur} />\r\n              )\r\n            } else {\r\n              return null\r\n            }\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst suspendOtherSurfaces = () => {\r\n  document.documentElement.classList.add('wq-x-suspended')\r\n}\r\nconst resumeOtherSurfaces = () => {\r\n  document.documentElement.classList.remove('wq-x-suspended')\r\n}\r\nconst overlayOnCreate = (el) => {\r\n  suspendOtherSurfaces()\r\n  tnOnCreate(el)\r\n}\r\nconst overlayOnRemove = (el, done) => {\r\n  const myDone = () => {\r\n    resumeOtherSurfaces()\r\n    done()\r\n  }\r\n  tnOnRemove(el, myDone)\r\n}\r\nconst WNavigator = (\r\n    {\r\n      data, \r\n      onoptionchange, \r\n      ontextinput, \r\n      ontextblur, \r\n      onrangeblur, \r\n      labels, \r\n      messages, \r\n      onWizardNext, \r\n      onWizardPrev, \r\n      onWizardOpen, \r\n      onWizardClose, \r\n      current, \r\n      current2, \r\n      open, \r\n      flipped\r\n    }, children) => {\r\n  const id = 'wq-wnavigator'\r\n  const length = form.detailItems.length\r\n  const item = (open && current < length) ? form.detailItems[current] : null\r\n  const item2 = (open && current2 < length) ? form.detailItems[current2] : null\r\n  const selectedOptions = (open && current < length) ? (data.hasOwnProperty(item.id) ? data[item.id] : {}) : null\r\n  const message = (open && current < length) ? (messages.hasOwnProperty(item.id) ? messages[item.id] : null) : null\r\n  const messageValues = Object.values(messages)\r\n  const originalOnoptionchange = onoptionchange\r\n  if (item && item.type == \"Selector\" && !item.multiple) {\r\n    onoptionchange = (ev) => {\r\n      window.setTimeout(() => {\r\n        onWizardNext()\r\n      }, 400)\r\n      return originalOnoptionchange(ev)\r\n    }\r\n  }\r\n  return (\r\n    <div class={`wq-WNavigator ${open ? 'wq-is-active' : ''}`} key={id} id={id}>\r\n      <div class=\"wq--base\">\r\n        <Button type=\"primary\" onclick={onWizardOpen} xclass=\"wq-belongs-wnavbase\">{_Tv('Start Order')}</Button>\r\n        {messageValues.length > 0 ? (\r\n          <div class=\"wq--message wq-lct-enabled\" oncreate={tnOnCreate} onremove={tnOnRemove}>{_Tv(messageValues[0])}</div>\r\n        ) : null}\r\n        {/*Object.keys(messages).length > 0 ? (\r\n          <div class=\"wq--message wq-lct-enabled\" oncreate={tnOnCreate} onremove={tnOnRemove}>{_Tv('Your selection is insufficient.')}</div>\r\n        ) : null*/}\r\n      </div>\r\n      {open ? (\r\n        <div class={`wq--overlay wq-lct-enabled`} id=\"wq-wnav-overlay\" key=\"wnav-overlay\" oncreate={overlayOnCreate} onremove={overlayOnRemove}>\r\n          <div class={`wq--dialog`} key=\"wnav-dialog\">\r\n            {children}\r\n            <div class={`wq--main ${flipped ? 'wq-is-flipped' : ''}`} key=\"wnav-main\">\r\n              <div class=\"wq--slide wq-lct-enabled\" oncreate={tnOnCreate} onremove={tnOnRemove} key={`slide-${current}`} id={`slide-${current}`}>\r\n                {item && item.type == \"Selector\" ? (\r\n                  <Selector selector={form.detailItems[current]} onoptionchange={onoptionchange} selectedOptions={selectedOptions} labels={labels} message={message} navigator=\"wnavigator\"></Selector>\r\n                ) : null}\r\n                {item && item.type == \"Quantity\" ? (\r\n                  <Quantity quantity={item} value={data[item.id]} message={message} oninput={ontextinput} onblur={ontextblur} navigator=\"wnavigator\" />\r\n                ) : null}\r\n                {item && item.type == \"Slider\" ? (\r\n                  <Slider slider={item} value={data[item.id]} message={message} navigator=\"wnavigator\" oninput={ontextinput} onchange={onrangeblur} />\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            <div class=\"wq--action\" key=\"wnav-action\">\r\n              <Button type=\"normal\" onclick={onWizardClose} xclass=\"wq-belongs-wnavdialog wq-for-closewizard\">{_Tv('Close')}</Button>\r\n              <div class=\"wq--spacer\" />\r\n              <Button type=\"normal\" onclick={onWizardPrev} xclass=\"wq-belongs-wnavdialog wq-for-backwizard\" disabled={(findPrevIndex(current2, data) == -1)}>{_Tv('Previous')}</Button>\r\n              <Button typr=\"normal\" onclick={onWizardNext} disabled={current2 == length} xclass=\"wq-belongs-wnavdialog wq-for-forwardwizard\">{_Tv('Next')}</Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  ) \r\n}\r\n\r\nconst Monitor = (\r\n    {\r\n      detailsState, \r\n      monitorPos, \r\n      confirming, \r\n      spShown, \r\n      onHide\r\n    }) => {\r\n  const id = `wq-monitor`\r\n  const doSidebar = wqData.form.navigator == 'horizontal' && wqData.sidebarSelector && !confirming\r\n  const style = doSidebar ? {left:monitorPos.left+'px', width:monitorPos.width+'px'} : {}\r\n  return (\r\n    <div class={`wq-Monitor ${confirming ? 'wq-is-confirming' : ''} ${spShown ? 'wq-is-spshown' : ''} ${doSidebar ? 'wq-is-sidebar' : ''} ${doSidebar ? ('wq-sticks-'+monitorPos.v) : ''}`} id={id} key={id} style={style}>\r\n      <div class=\"wq--header\">\r\n        <div class=\"wq--title\">{_T('Quotation Details')}</div>\r\n        <div class=\"wq--menu\">\r\n          <Button type=\"normal\" onclick={onHide} xclass=\"wq-belongs-monmenu wq-for-hidemonitor\">{_T('Hide Monitor')}</Button>\r\n        </div>\r\n      </div>\r\n      <div class=\"wq--entries\">\r\n        <div class=\"wq--entry wq-for-header\">\r\n          <div class=\"wq--prop wq-for-no\">{_Tv('No')}</div>\r\n          <div class=\"wq--prop wq-for-category\">{_Tv('Category')}</div>\r\n          <div class=\"wq--prop wq-for-entry\">{_Tv('Entry')}</div>\r\n          <div class=\"wq--prop wq-for-normalUnitPrice\">{_T('Regular Unit Price')}</div>\r\n          <div class=\"wq--prop wq-for-unitPrice\">{_Tv('Unit Price')}</div>\r\n          <div class=\"wq--prop wq-for-quantity\">{_Tv('Quantity')}</div>\r\n          <div class=\"wq--prop wq-for-price\">{_Tv('Price')}</div>\r\n          {!rule.taxIncluded && (<div class=\"wq--prop wq-for-taxClass\">{_Tv('Tax Class')}</div>)}\r\n        </div>\r\n        {detailsState.details.map((detail, i) => {\r\n          const id = `wq-monitor-entry-${detail.key}`\r\n          return (\r\n            <div class=\"wq--entry wq-for-entry wq-lct-enabled\" key={id} id={id} oncreate={tnOnCreate} onremove={tnOnRemove}>\r\n              <div class=\"wq--prop wq-for-no\">{i + 1}</div>\r\n              <div class=\"wq--prop wq-for-category\">{detail.category}</div>\r\n              <div class=\"wq--prop wq-for-entry\">{detail.name}</div>\r\n              <div class=\"wq--prop wq-for-normalUnitPrice\">{typeof detail.normalUnitPrice == 'number' ? nf(detail.normalUnitPrice) : null}</div>\r\n              <div class=\"wq--prop wq-for-unitPrice\">{nf(detail.unitPrice)}</div>\r\n              <div class=\"wq--prop wq-for-quantity\"><span class=\"wq--simpleDisplay\">{detail.quantity}</span><span class=\"wq--independentDisplay\">{sprintf(_T('x%s'), detail.quantity)}</span></div>\r\n              <div class=\"wq--prop wq-for-price\">{nf(normalizePrice(rule, detail.unitPrice * detail.quantity))}</div>\r\n              {!rule.taxIncluded && (<div class=\"wq--prop wq-for-taxClass\">{detail.taxRate === null ? sprintf(_Tv('(common %s%% applied)'), \"\"+rule.taxRate) : sprintf(_Tv('(%s%% applied)'), detail.taxRate)}</div>)}\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n      {rule.taxIncluded \r\n        ? (() => {\r\n          return (\r\n            <div class=\"wq--footer\">\r\n              <div class=\"wq--entry wq-for-total\">\r\n                <div class=\"wq--prop wq-for-name\">{_Tv('Total')}</div>\r\n                <div class=\"wq--prop wq-for-normalValue\" key={detailsState.normalTotal}>{pricePrefix + nf(detailsState.normalTotal) + priceSuffix}</div>\r\n                <div class=\"wq--prop wq-for-value\">{pricePrefix}<span><span class=\"wq-lct-enabled\" id={detailsState.total} key={detailsState.total} oncreate={tnOnCreate} onremove={tnOnRemove}>{nf(detailsState.total)}</span></span>{priceSuffix}</div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })() : (() => {\r\n          const subtotal = detailsState.total\r\n          const totalwt = reduceHash((cur, key, tax) => {\r\n            return cur + tax\r\n          }, subtotal, detailsState.taxes)\r\n          const defaultTax = detailsState.taxes.hasOwnProperty('') ? detailsState.taxes[''] : null\r\n          return (\r\n            <div class=\"wq--footer\">\r\n              <div class=\"wq--entry wq-for-subtotal\">\r\n                <div class=\"wq--prop wq-for-name\">{_Tv('Subtotal')}</div>\r\n                <div class=\"wq--prop wq-for-normalValue\" key={detailsState.normalTotal}>{pricePrefix + nf(detailsState.normalTotal) + priceSuffix}</div>\r\n                <div class=\"wq--prop wq-for-value\">{pricePrefix}<span><span class=\"wq-lct-enabled\" id={subtotal} key={subtotal} oncreate={tnOnCreate} onremove={tnOnRemove}>{nf(subtotal)}</span></span>{priceSuffix}</div>\r\n              </div>\r\n              {defaultTax !== null ? (\r\n                <div class=\"wq--entry wq-for-tax wq-rate-common\">\r\n                  <div class=\"wq--prop wq-for-name\">{sprintf(_Tv('Tax (common %s%%)'), \"\"+rule.taxRate)}</div>\r\n                  <div class=\"wq--prop wq-for-normalValue\"></div>\r\n                  <div class=\"wq--prop wq-for-value\">{pricePrefix}<span><span class=\"wq-lct-enabled\" id={defaultTax} key={defaultTax} oncreate={tnOnCreate} onremove={tnOnRemove}>{nf(defaultTax)}</span></span>{priceSuffix}</div>\r\n                </div>\r\n              ) : null}\r\n              {reduceHash((cur, key, tax) => {\r\n                if (key === \"\") return cur\r\n                return [...cur, \r\n                  <div class=\"wq--entry wq-for-tax wq-rate-individual\">\r\n                    <div class=\"wq--prop wq-for-name\">{sprintf(_Tv('Tax (%s%%)'), \"\"+key)}</div>\r\n                    <div class=\"wq--prop wq-for-normalValue\"></div>\r\n                    <div class=\"wq--prop wq-for-value\">{pricePrefix}<span><span class=\"wq-lct-enabled\" id={tax} key={tax} oncreate={tnOnCreate} onremove={tnOnRemove}>{nf(tax)}</span></span>{priceSuffix}</div>\r\n                  </div>\r\n                ]\r\n              }, [], detailsState.taxes)}\r\n              <div class=\"wq--entry wq-for-total\">\r\n                <div class=\"wq--prop wq-for-name\">{_Tv('Total')}</div>\r\n                <div class=\"wq--prop wq-for-normalValue\"></div>\r\n                <div class=\"wq--prop wq-for-value\">{pricePrefix}<span><span class=\"wq-lct-enabled\" id={totalwt} key={totalwt} oncreate={tnOnCreate} onremove={tnOnRemove}>{nf(totalwt)}</span></span>{priceSuffix}</div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })()\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst attrItem_table = {}\r\nconst MSG_REQUIRED = 'Input here'\r\nconst MSG_INVALID = 'Invalid'\r\nconst MSG_TOCHECK = 'Check here'\r\nconst MSG_TOSELECT = 'Select here'\r\nconst MSG_DIFFERENT = 'Repeat here'\r\nconst MSG_TOOSMALL = 'Too small'\r\nconst MSG_TOOLARGE = 'Too large'\r\nconst MSG_HIRAGANA = 'Input in Hiragana'\r\nconst MSG_KATAKANA = 'Input in Katakana'\r\nconst MSG_UPLOADING = 'Wait for upload'\r\n\r\n// {type, id, name, required, note, divided}\r\nattrItem_table.Name = {}\r\nattrItem_table.Name.view = (item, state, actions) => {\r\n  const id = `wq-attr-name-${item.id}`\r\n  if (! item.divided) {\r\n    const name = `name-${item.id}`\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass={`wq-belongs-attr wq-for-name`} key={id}>\r\n        <TextInput type=\"text\" size=\"normal\" name={name} placeholder={_T('Your Name')} value={state.value} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-name wq_attr-${item.id}`} />\r\n      </Control>\r\n    )\r\n  } else {\r\n    const names = [`name-${item.id}-0`, `attr-${item.id}-1`]\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass={`wq-belongs-attr wq-for-name wq-is-divided`} key={id}>\r\n        <InputGroup gutter=\"mini\" xclass={`wq-belongs-attr wq-belongs-name`}>\r\n          <TextInput type=\"text\" size=\"small\" name={names[0]} placeholder={_T('First Name')} value={state.value[0]} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-name wq_attr-${item.id}`} />\r\n          <TextInput type=\"text\" size=\"small\" name={names[1]} placeholder={_T('Last Name')} value={state.value[1]} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-name wq_attr-${item.id}`} />\r\n        </InputGroup>\r\n      </Control>\r\n    )\r\n  }\r\n}\r\nattrItem_table.Name.initialState = (item) => {\r\n  if (item.divided) {\r\n    return {value:[\"\", \"\"], message:null}\r\n  } else {\r\n    return {value:\"\", message:null}\r\n  }\r\n}\r\nattrItem_table.Name.compile = (item, state) => {\r\n  if (item.divided) {\r\n    return state.value.join(' ')\r\n  } else {\r\n    return state.value\r\n  }\r\n}\r\nattrItem_table.Name.hiraganaPattern = /^([ぁ-ん]|ー| |　)+$/\r\nattrItem_table.Name.katakanaPattern = /^([ァ-ン]|ー| |　)+$/\r\nattrItem_table.Name.validate = (item, state) => {\r\n  if (item.divided) {\r\n    if (!item.required && state.value[0] == \"\" && state.value[1] == \"\") {\r\n      // thru\r\n    } else if (state.value[0] == \"\" || state.value[1] == \"\") {\r\n      return {value:state.value, message:MSG_REQUIRED}\r\n    } else if (item.pattern == 'hiragana' && (!state.value[0].match(attrItem_table.Name.hiraganaPattern) || !state.value[1].match(attrItem_table.Name.hiraganaPattern))) {\r\n      return {value:state.value, message:MSG_HIRAGANA}\r\n    } else if (item.pattern == 'katakana' && (!state.value[0].match(attrItem_table.Name.katakanaPattern) || !state.value[1].match(attrItem_table.Name.katakanaPattern))) {\r\n      return {value:state.value, message:MSG_KATAKANA}\r\n    }\r\n    return {value:state.value, message:null}\r\n  } else {\r\n    if (!item.required && state.value == \"\") {\r\n      // thru\r\n    } else if (state.value == \"\") {\r\n      return {value:state.value, message:MSG_REQUIRED}\r\n    } else if (item.pattern == 'hiragana' && !state.value.match(attrItem_table.Name.hiraganaPattern)) {\r\n      return {value:state.value, message:MSG_HIRAGANA}\r\n    } else if (item.pattern == 'katakana' && !state.value.match(attrItem_table.Name.katakanaPattern)) {\r\n      return {value:state.value, message:MSG_KATAKANA}\r\n    }\r\n    return {value:state.value, message:null}\r\n  }\r\n}\r\nattrItem_table.Name.createActions = (item) => {\r\n  if (item.divided) {\r\n    return {\r\n      oninput: (ev) => (state, _actions) => {\r\n        const idx = branchNo(ev.currentTarget.name, '-')\r\n        return {...state, value:replaceElement(state.value, idx, ev.currentTarget.value)}\r\n      }, \r\n      onblur: (ev) => (state, _actions) => {\r\n        const idx = branchNo(ev.currentTarget.name, '-')\r\n        if (idx == 1) {\r\n          if (!item.required && state.value[0] == \"\" && state.value[1] == \"\") {\r\n            // thru\r\n          } else if (state.value[0] == \"\" || state.value[1] == \"\") {\r\n            return {value:state.value, message:MSG_REQUIRED}\r\n          } else if (item.pattern == 'hiragana' && (!state.value[0].match(attrItem_table.Name.hiraganaPattern) || !state.value[1].match(attrItem_table.Name.hiraganaPattern))) {\r\n            return {value:state.value, message:MSG_HIRAGANA}\r\n          } else if (item.pattern == 'katakana' && (!state.value[0].match(attrItem_table.Name.katakanaPattern) || !state.value[1].match(attrItem_table.Name.katakanaPattern))) {\r\n            return {value:state.value, message:MSG_KATAKANA}\r\n          }\r\n        }\r\n        return {...state, message:null}\r\n      }\r\n    }\r\n  } else {\r\n    return {\r\n      oninput: (ev) => (state, _actions) => {\r\n        return {value:ev.currentTarget.value, message:state.message}\r\n      }, \r\n      onblur: (ev) => ({value, _message}, _actions) => {\r\n        if (!item.required && value == \"\") {\r\n          // thru\r\n        } else if (value == \"\") {\r\n          return {value, message:MSG_REQUIRED}\r\n        } else if (item.pattern == 'hiragana' && !state.value.match(attrItem_table.Name.hiraganaPattern)) {\r\n          return {value:state.value, message:MSG_HIRAGANA}\r\n        } else if (item.pattern == 'katakana' && !state.value.match(attrItem_table.Name.katakanaPattern)) {\r\n          return {value:state.value, message:MSG_KATAKANA}\r\n        }\r\n        return {value, message:null}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, required, note, repeated}\r\nattrItem_table.Email = {}\r\nattrItem_table.Email.view = (item, state, actions) => {\r\n  const id = `wq-attr-email-${item.id}`\r\n  if (item.repeated) {\r\n    const names = [`email-${item.id}-0`, `email-${item.id}-1`]\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wq-belongs-attr wq-for-email\" key={id}>\r\n        <TextInput type=\"text\" size=\"full\" name={names[0]} placeholder={_T('info@example.com')} value={state.value[0]} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-email wq_attr-${item.id}`} />\r\n        <TextInput type=\"text\" size=\"full\" name={names[1]} placeholder={_T('Confirm again')} value={state.value[1]} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-email wq_attr-${item.id}`} />\r\n      </Control>\r\n    )\r\n  } else {\r\n    const name = `email-${item.id}`\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wq-belongs-attr wq-for-email\" key={id}>\r\n        <TextInput type=\"text\" size=\"full\" name={name} placeholder={_T('info@example.com')} value={state.value} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-email wq_attr-${item.id}`} />\r\n      </Control>\r\n    )\r\n  }\r\n}\r\nattrItem_table.Email.pattern = /^([a-zA-Z0-9])+([a-zA-Z0-9\\._-])*@([a-zA-Z0-9_-])+([a-zA-Z0-9\\._-]+)+$/\r\nattrItem_table.Email.initialState = (item) => {\r\n  if (item.repeated) {\r\n    return {value:[\"\", \"\"], message:null}\r\n  } else {\r\n    return {value:\"\", message:null}\r\n  }\r\n}\r\nattrItem_table.Email.compile = (item, state) => {\r\n  if (item.repeated) {\r\n    return state.value[0]\r\n  } else {\r\n    return state.value\r\n  }\r\n}\r\nattrItem_table.Email.validate = (item, state) => {\r\n  if (item.repeated) {\r\n    if (!item.required && state.value[0] == \"\" && state.value[1] == \"\") {\r\n      // thru\r\n    } else if (state.value[0] == \"\" || state.value[1] == \"\") {\r\n      return {...state, message:MSG_REQUIRED}\r\n    } else if (!state.value[0].match(attrItem_table.Email.pattern)) {\r\n      return {...state, message:MSG_INVALID}\r\n    } else if (state.value[0] != state.value[1]) {\r\n      return {...state, message:MSG_DIFFERENT}\r\n    }\r\n    return {...state, message:null}\r\n  } else {\r\n    if (!item.required && state.value == \"\") {\r\n      // thru\r\n    } else if (state.value == \"\") {\r\n      return {value:state.value, message:MSG_REQUIRED}\r\n    } else if (!state.value.match(attrItem_table.Email.pattern)) {\r\n      return {value:state.value, message:MSG_INVALID}\r\n    }\r\n    return {value:state.value, message:null}\r\n  }\r\n}\r\nattrItem_table.Email.createActions = (item) => {\r\n  if (item.repeated) {\r\n    return {\r\n      oninput: (ev) => (state, _actions) => {\r\n        const idx = branchNo(ev.currentTarget.name, '-')\r\n        return {...state, value:replaceElement(state.value, idx, ev.currentTarget.value)}\r\n      }, \r\n      onblur: (ev) => ({value, _message}, _actions) => {\r\n        const idx = branchNo(ev.currentTarget.name, '-')\r\n        if (idx == 1) {\r\n          if (!item.required && value[0] == \"\" && value[1] == \"\") {\r\n            // thru\r\n          } else if (value[0] == \"\" || value[1] == \"\") {\r\n            return {value, message:MSG_REQUIRED}\r\n          } else if (!value[0].match(attrItem_table.Email.pattern)) {\r\n            return {value, message:MSG_INVALID}\r\n          } else if (value[0] != value[1]) {\r\n            return {value, message:MSG_DIFFERENT}\r\n          }\r\n        }\r\n        return {value, message:null}\r\n      }\r\n    }\r\n  } else {\r\n    return {\r\n      oninput: (ev) => (state, _actions) => {\r\n        return {value:ev.currentTarget.value, message:state.message}\r\n      }, \r\n      onblur: (ev) => ({value, _message}, _actions) => {\r\n        if (!item.required && value == \"\") {\r\n          // thru\r\n        } else if (value == \"\") {\r\n          return {value, message:MSG_REQUIRED}\r\n        } else if (!value.match(attrItem_table.Email.pattern)) {\r\n          return {value, message:MSG_INVALID}\r\n        }\r\n        return {value, message:null}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, divided, required, note}\r\nattrItem_table.Tel = {}\r\nattrItem_table.Tel.view = (item, state, actions) => {\r\n  const id = `wq-attr-tel-${item.id}`\r\n  if (item.divided) {\r\n    const name = `tel-${item.id}`\r\n    const phs = _T('03-1111-2222').split('-')\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wq-belongs-attr wq-for-tel\" key={id}>\r\n        <InputGroup xclass=\"wq-belongs-attr wq-belongs-tel\">\r\n          <TextInput type=\"tel\" size=\"nano\" name={name+'-0'} placeholder={phs[0]} value={state.value[0]} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-tel wq_attr-${item.id}`} />\r\n          <span>-</span>\r\n          <TextInput type=\"tel\" size=\"mini\" name={name+'-1'} placeholder={phs[1]} value={state.value[1]} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-tel wq_attr-${item.id}`} />\r\n          <span>-</span>\r\n          <TextInput type=\"tel\" size=\"mini\" name={name+'-2'} placeholder={phs[2]} value={state.value[2]} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-tel wq_attr-${item.id}`} />\r\n        </InputGroup>\r\n      </Control>\r\n    )\r\n  } else {\r\n    const name = `tel-${item.id}`\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wq-belongs-attr wq-for-tel\" key={id}>\r\n        <TextInput type=\"tel\" size=\"small\" name={name} placeholder={_T('03-1111-2222')} value={state.value} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-tel wq_attr-${item.id}`} />\r\n      </Control>\r\n    )\r\n  }\r\n}\r\nattrItem_table.Tel.initialState = (item) => {\r\n  if (item.divided) {\r\n    return {value:[\"\", \"\", \"\"], message:null}\r\n  } else {\r\n    return {value:\"\", message:null}\r\n  }\r\n}\r\nattrItem_table.Tel.compile = (item, state) => {\r\n  if (item.divided) {\r\n    return (state.value[0] == '') ? '' : state.value.join('-')\r\n  } else {\r\n    return state.value\r\n  }\r\n}\r\nattrItem_table.Tel.validate = (item, state) => {\r\n  if (item.divided) {\r\n    if (!item.required && state.value.every(emptyString)) {\r\n      // thru\r\n    } else if (state.value.some(emptyString)) {\r\n      return {value:state.value, message:MSG_REQUIRED}\r\n    } else if (! state.value.join('').match(/^[0-9]+$/)) {\r\n      return {value:state.value, message:MSG_INVALID}\r\n    }\r\n    return {value:state.value, message:null}\r\n  } else {\r\n    if (!item.required && state.value == \"\") {\r\n      // thru\r\n    } else if (state.value == \"\") {\r\n      return {value:state.value, message:MSG_REQUIRED}\r\n    } else if (! state.value.match(/^[0-9-]+$/)) {\r\n      return {value:state.value, message:MSG_INVALID}\r\n    }\r\n    return {value:state.value, message:null}\r\n  }\r\n}\r\nattrItem_table.Tel.createActions = (item) => {\r\n  if (item.divided) {\r\n    return {\r\n      oninput: (ev) => (state, _actions) => {\r\n        const idx = branchNo(ev.currentTarget.name, '-')\r\n        return {...state, value:replaceElement(state.value, idx, ev.currentTarget.value)}\r\n      }, \r\n      onblur: (ev) => ({value, _message}, _actions) => {\r\n        const idx = branchNo(ev.currentTarget.name, '-')\r\n        if (idx == 2) {\r\n          if (!item.required && value.every(emptyString)) {\r\n            // thru\r\n          } else if (value.some(emptyString)) {\r\n            return {value, message:MSG_REQUIRED}\r\n          } else if (! value.join('').match(/^[0-9]+$/)) {\r\n            return {value, message:MSG_INVALID}\r\n          }\r\n        }\r\n        return {value, message:null}\r\n      }\r\n    }\r\n  } else {\r\n    return {\r\n      oninput: (ev) => (state, _actions) => {\r\n        return {...state, value:ev.currentTarget.value}\r\n      }, \r\n      onblur: (ev) => ({value, _message}, _actions) => {\r\n        if (!item.required && value == \"\") {\r\n          // thru\r\n        } else if (value == \"\") {\r\n          return {value, message:MSG_REQUIRED}\r\n        } else if (! value.match(/^[0-9-]+$/)) {\r\n          return {value, message:MSG_INVALID}\r\n        }\r\n        return {value, message:null}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, required, note, autoFill}\r\nattrItem_table.Address = {}\r\nattrItem_table.Address.view = (item, state, actions) => {\r\n  const id = `wq-attr-address-${item.id}`\r\n  const name = `address-${item.id}`\r\n  return (\r\n    <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass={`wq-belongs-attr wq-for-address`} key={id}>\r\n      <InputGroup gutter=\"mini\" xclass=\"wq-belongs-attr wq-belongs-address\">\r\n        <span>{_Tv('Zip')}</span>\r\n        <TextInput type=\"tel\" name={`${name}-0`} size=\"small\" value={state.value[0]} oninput={actions.oninput} onblur={actions.onblur} placeholder={_T('000-0000')} invalid={!!state.message} xclass={`wq-belongs-attr wq-belongs-address wq-for-zip wq_attr-${item.id}`} />\r\n      </InputGroup>\r\n      <InputGroup gutter=\"mini\" xclass=\"wq-belongs-attr wq-belongs-address\">\r\n        <TextInput type=\"text\" name={`${name}-1`} size=\"small\" value={state.value[1]} oninput={actions.oninput} onblur={actions.onblur} placeholder={_T('Tokyo')} invalid={!!state.message} xclass={`wq-belongs-attr wq-belongs-address wq-for-pref wq_attr-${item.id}`} />\r\n        <TextInput type=\"text\" name={`${name}-2`} size=\"small\" value={state.value[2]} oninput={actions.oninput} onblur={actions.onblur} placeholder={_T('Chiyoda-ku')} invalid={!!state.message} xclass={`wq-belongs-attr wq-belongs-address wq-for-city wq_attr-${item.id}`} />\r\n      </InputGroup>\r\n      <TextInput type=\"text\" name={`${name}-3`} size=\"full\" value={state.value[3]} oninput={actions.oninput} onblur={actions.onblur} placeholder={_T('1-1-1, Chiyoda')} invalid={!!state.message} xclass={`wq-belongs-attr wq-belongs-address wq-for-street wq_attr-${item.id}`} />\r\n      <TextInput type=\"text\" name={`${name}-4`} size=\"full\" value={state.value[4]} oninput={actions.oninput} onblur={actions.onblur} placeholder={_T('Chiyoda mansion 8F')} invalid={!!state.message} xclass={`wq-belongs-attr wq-belongs-address wq-for-room wq_attr-${item.id}`} />\r\n    </Control>\r\n  )\r\n}\r\nattrItem_table.Address.initialState = (_item) => ({message:null, value:[\"\", \"\", \"\", \"\", \"\"]})\r\nattrItem_table.Address.compile = (_item, state) => {\r\n  if (state.value.every(emptyString)) {\r\n    return \"\"\r\n  } else {\r\n    return `${state.value[0]} ${state.value[1]}${state.value[2]}${state.value[3]} ${state.value[4]}`\r\n  }\r\n}\r\nattrItem_table.Address.validate = (item, {value, message}) => {\r\n  if (!item.required && value.every(emptyString)) {\r\n    // thru\r\n  } else if (value[0] == \"\" || value[1] == \"\" || value[2] == \"\" || value[3] == \"\") {\r\n    return {value, message:MSG_REQUIRED}\r\n  } else if (! value[0].match(new RegExp(_T('^[0-9]{3}-?[0-9]{4}$')))) {\r\n    return {value, message:MSG_INVALID}\r\n  }\r\n  return {value, message:null}\r\n}\r\nattrItem_table.Address.createActions = (item) => {\r\n  return {\r\n    oninput: (ev) => (state, actions) => {\r\n      const idx = branchNo(ev.currentTarget.name, '-')\r\n      const curval = ev.currentTarget.value\r\n      if (item.autoFill == 'yubinbango' && idx == 0 && curval.match(new RegExp(_T('^[0-9]{3}-?[0-9]{4}$')))) {\r\n        window.requestAnimationFrame(() => complementAddress(curval, actions.onfill))\r\n      }\r\n      return {...state, value:replaceElement(state.value, idx, curval)}\r\n    }, \r\n    onblur: (ev) => ({value, message}, actions) => {\r\n      const idx = branchNo(ev.currentTarget.name, '-')\r\n      if (idx == 4) {\r\n        if (!item.required && value.every(emptyString)) {\r\n          // thru\r\n        } else if (value[0] == \"\" || value[1] == \"\" || value[2] == \"\" || value[3] == \"\") {\r\n          return {value, message:MSG_REQUIRED}\r\n        } else if (! value[0].match(new RegExp(_T('^[0-9]{3}-?[0-9]{4}$')))) {\r\n          return {value, message:MSG_INVALID}\r\n        }\r\n      }\r\n      return {value, message:null}\r\n    }, \r\n    onfill: (fs) => ({value, message}, actions) => {\r\n      value = [value[0], fs.region, fs.locality, fs.street, value[4]]\r\n      return {value, message}\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, required, note}\r\nattrItem_table.Checkbox = {}\r\nattrItem_table.Checkbox.view = (item, state, actions) => {\r\n  const id = `wq-attr-checkbox-${item.id}`\r\n  const name = `checkbox-${item.id}`\r\n  return (\r\n    <Control label=\"\" required={false} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wq-belongs-attr wq-for-checkbox\" key={id}>\r\n      <InputGroup xclass=\"wq-belongs-attr wq-belongs-checkbox\">\r\n        <Checkbox name={name} value=\"true\" checked={state.checked} invalid={!!state.message} onchange={actions.onchange} xclass={`wq-belongs-attr wq-belongs-checkbox`} inputXclass={`wq_attr-${item.id}`}>{item.name}</Checkbox>\r\n      </InputGroup>\r\n    </Control>\r\n  )\r\n}\r\nattrItem_table.Checkbox.initialState = (item) => ({checked:!!item.initialValue, message:null})\r\nattrItem_table.Checkbox.compile = (_item, state) => (state.checked ? _T('Checked') : '')\r\nattrItem_table.Checkbox.validate = (item, state) => {\r\n  if (item.required && !state.checked) {\r\n    return {checked:state.checked, message:MSG_TOCHECK}\r\n  }\r\n  return (state.message == null) ? state : {checked:state.checked, message:null}\r\n}\r\nattrItem_table.Checkbox.createActions = (item) => {\r\n  return {\r\n    onchange: (ev) => ({checked, message}, actions) => {\r\n      if (ev.currentTarget.checked) {\r\n        return {checked:true, message:null}\r\n      } else if (item.required) {\r\n        return {checked:false, message:MSG_TOCHECK}\r\n      } else {\r\n        return {checked:false, message:null}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, required, note, options}\r\nattrItem_table.Radio = {}\r\nattrItem_table.Radio.view = (item, state, actions) => {\r\n  const id = `wq-attr-radio-${item.id}`\r\n  const name = `radio-${item.id}`\r\n  return (\r\n    <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wq-belongs-attr wq-for-radio\" key={id}>\r\n      <InputGroup gutter=\"mini\" xclass=\"wq-belongs-attr wq-belongs-radio\">\r\n        {item.options.map((opt, i) => {\r\n          return (\r\n            <RadioButton name={name} value={opt} checked={state.value == opt} invalid={!!state.message} onchange={actions.onchange} index={i} xclass={`wq-belongs-attr wq-belongs-radio`} inputXclass={`wq_attr-${item.id}`}>{opt}</RadioButton>\r\n          )\r\n        })}\r\n      </InputGroup>\r\n    </Control>\r\n  )\r\n}\r\nattrItem_table.Radio.initialState = (item) => {\r\n  const vs = item.options.filter(o => o == item.initialValue)\r\n  return {value:vs.length > 0 ? vs[0] : null, message:null}\r\n}\r\nattrItem_table.Radio.compile = (_item, state) => state.value\r\nattrItem_table.Radio.validate = (item, state) => {\r\n  if (!item.required && state.value == null) {\r\n    // thru\r\n  } else if (state.value == null) {\r\n    return {value:state.value, message:MSG_TOSELECT}\r\n  } else if (indexOf(state.value, item.options) == -1) {\r\n    return {value:state.value, message:MSG_INVALID}\r\n  }\r\n  return {value:state.value, message:null}\r\n}\r\nattrItem_table.Radio.createActions = (item) => {\r\n  return {\r\n    onchange: (ev) => ({value, message}, actions) => {\r\n      if (ev.currentTarget.checked) {\r\n        const value = ev.currentTarget.value || null\r\n        return {value, message:null}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, required, note, options}\r\nattrItem_table.Dropdown = {}\r\nattrItem_table.Dropdown.view = (item, state, actions) => {\r\n  const id = `wq-attr-dropdown-${item.id}`\r\n  const name = `dropdown-${item.id}`\r\n  const placeholder = _T('Please select')\r\n  return (\r\n    <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wq-belongs-attr wq-for-dropdown\" key={id}>\r\n      <Select name={name} options={item.options} value={state.value} invalid={!!state.message} onchange={actions.onchange} xclass={`wq-belongs-attr wq-belongs-select`} inputXclass={`wq_attr-${item.id}`} placeholder={placeholder} />\r\n    </Control>\r\n  )\r\n}\r\nattrItem_table.Dropdown.initialState = attrItem_table.Radio.initialState\r\nattrItem_table.Dropdown.compile = attrItem_table.Radio.compile\r\nattrItem_table.Dropdown.validate = attrItem_table.Radio.validate\r\nattrItem_table.Dropdown.createActions = (item) => {\r\n  return {\r\n    onchange: (ev) => ({_value, message}, actions) => {\r\n      const value = ev.currentTarget.value || null\r\n      return {value, message: (!value && item.required) ? MSG_TOSELECT : null}\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, required, note, options, initialValue}\r\nattrItem_table.MultiCheckbox = {}\r\nattrItem_table.MultiCheckbox.view = (item, state, actions) => {\r\n  const id = `wq-attr-multicheckbox-${item.id}`\r\n  const name = `multicheckbox-${item.id}`\r\n  return (\r\n    <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass=\"wq-belongs-attr wq-for-multicheckbox\" key={id}>\r\n      <InputGroup gutter=\"mini\" xclass=\"wq-belongs-attr wq-belongs-multicheckbox\">\r\n        {item.options.map((opt, i) => {\r\n          return (\r\n            <Checkbox id={`${id}-${i}`} name={name} value={opt} checked={indexOf(opt, state.value) != -1} invalid={!!state.message} onchange={actions.onchange} xclass={`wq-belongs-attr wq-belongs-multicheckbox`} inputXclass={`wq_attr-${item.id}`}>{opt}</Checkbox>\r\n          )\r\n        })}\r\n      </InputGroup>\r\n    </Control>\r\n  )\r\n}\r\nattrItem_table.MultiCheckbox.initialState = (item) => {\r\n  return {value:item.initialValue, message:null}\r\n}\r\nattrItem_table.MultiCheckbox.compile = (_item, state) => state.value\r\nattrItem_table.MultiCheckbox.validate = (item, state) => {\r\n  if (!item.required && state.value.length == 0) {\r\n    // thru\r\n  } else if (state.value.length == 0) {\r\n    return {value:state.value, message:MSG_TOSELECT}\r\n  }\r\n  return {value:state.value, message:null}\r\n}\r\nattrItem_table.MultiCheckbox.createActions = (item) => {\r\n  return {\r\n    onchange: (ev) => ({value, message}, actions) => {\r\n      const v = ev.currentTarget.value\r\n      return {\r\n        value: ev.currentTarget.checked ? [...value, v] : value.filter(v0 => v0 != v), \r\n        message: null\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// {type, id, name, required, note, size, placeholder, multiline}\r\nattrItem_table.Text = {}\r\nattrItem_table.Text.view = (item, state, actions) => {\r\n  const id = `wq-attr-text-${item.id}`\r\n  const name = `text-${item.id}`\r\n  if (item.multiline) {\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass={`wq-belongs-attr wq-for-text wq-has-textarea`} key={id}>\r\n        <TextArea size={item.size} name={name} placeholder={item.placeholder} value={state.value} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-text wq_attr-${item.id}`} /> \r\n      </Control>\r\n    )\r\n  } else {\r\n    return (\r\n      <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass={`wq-belongs-attr wq-for-text`}>\r\n        <TextInput type=\"text\" size={item.size} name={name} placeholder={item.placeholder} value={state.value} invalid={!!state.message} oninput={actions.oninput} onblur={actions.onblur} xclass={`wq-belongs-attr wq-belongs-text wq_attr-${item.id}`} /> \r\n      </Control>\r\n    )\r\n  }\r\n}\r\nattrItem_table.Text.initialState = (_item) => ({value:\"\", message:null})\r\nattrItem_table.Text.compile = (_item, state) => state.value\r\nattrItem_table.Text.validate = (item, state) => {\r\n  if (item.required && state.value == \"\") {\r\n    return {value:state.value, message:MSG_REQUIRED}\r\n  }\r\n  return (state.message == null) ? state : {value:state.value, message:null}\r\n}\r\nattrItem_table.Text.createActions = (item) => {\r\n  return {\r\n    oninput: (ev) => (state, _actions) => {\r\n      return {...state, value:ev.currentTarget.value}\r\n    }, \r\n    onblur: (ev) => (state, _actions) => {\r\n      if (item.required && state.value == \"\") {\r\n        return {value:state.value, message:MSG_REQUIRED}\r\n      } else {\r\n        return {value:state.value, message:null}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// {id, type, action, siteKey}\r\nattrItem_table.reCAPTCHA3 = {}\r\nattrItem_table.reCAPTCHA3.view = (item, state, actions) => null\r\nattrItem_table.reCAPTCHA3.initialState = item => {\r\n  if (item.siteKey) {\r\n    // サイトキー・シークレットキーが入力されている場合のみ動作する。\r\n    window.setTimeout(() => {\r\n      // Gutenberg executes this code *before* document.body initialized.\r\n      // So defer its execution.\r\n      var e = document.createElement(\"script\");\r\n      e.setAttribute('src', `https://www.google.com/recaptcha/api.js?render=${item.siteKey}`)\r\n      document.body.appendChild(e)\r\n    }, 1000)\r\n  }\r\n  \r\n  return {value:\"\", message:null}\r\n}\r\nattrItem_table.reCAPTCHA3.compile = (item, _state) => {\r\n  if (!item.siteKey) return \"\"\r\n  return (postfix) => {\r\n    grecaptcha.execute(item.siteKey, {action: item.action}).then(token => {\r\n      postfix(token)\r\n    })\r\n  }\r\n}\r\nattrItem_table.reCAPTCHA3.validate = (item, state) => {\r\n  return state\r\n}\r\nattrItem_table.reCAPTCHA3.createActions = (item) => {{}}\r\n\r\n// item = {id, type, multiple, extensions, maxsize}\r\n// state = {value, message};  value = {key, name, url}[]\r\nattrItem_table.File = {}\r\nattrItem_table.File.view = (item, state, actions) => {\r\n  const id = `wq-attr-file-${item.id}`\r\n  const name = `file-${item.id}`\r\n  return (\r\n    <Control label={item.name} required={item.required} message={_Tv(state.message)} note={item.note} requiredText={_Tv(item.required ? 'required' : 'optional')} id={id} xclass={`wq-belongs-attr wq-for-file`}>\r\n      <InputGroup gutter=\"mini\" xclass=\"wq-belongs-attr wq-belongs-file\">\r\n        {(item.multiple || state.value.length == 0) ? (\r\n          <FileInput key=\"file-input\" name={name} onchange={actions.onChange} extensions={item.extensions} multiple={item.multiple} inputXclass={`wq_attr-${item.id}`} xclass={state.dragover ? 'wq-is-dragging' : ''} invalid={!!state.message} ondragover={actions.onDragOver} ondragleave={actions.onDragLeave} ondrop={actions.onDrop}>{_T('Drop files here or click')}</FileInput>\r\n        ) : null}\r\n        {state.value.map((file, i) => {\r\n          return (\r\n            <File index={i} key={file.key} url={file.url} name={file.name} loading={!file.url} ondelete={actions.onDelete} />\r\n          )\r\n        })}\r\n      </InputGroup>\r\n    </Control>\r\n  )\r\n}\r\nattrItem_table.File.initialState = (item) => {\r\n  return {value:[], message:null, dragover:false}\r\n}\r\nattrItem_table.File.compile = (item, state) => {\r\n  return state.value.map(({key:_key, ...rv}) => rv)\r\n}\r\nattrItem_table.File.validate = (item, state) => {\r\n  if (item.required && state.value.length == 0) {\r\n    return {value:state.value, message:MSG_REQUIRED}\r\n  }\r\n  for (let i = 0; i < state.value.length; i++) {\r\n    if (! state.value[i].url) return {...state, message:MSG_UPLOADING}\r\n  }\r\n  return (state.message == null) ? state : {...state, message:null}\r\n}\r\nattrItem_table.File.createActions = (item) => {\r\n  return {\r\n    onDelete: (ev) => (state, actions) => {\r\n      const index = ev.currentTarget.dataset.index\r\n      if (window.confirm(_T('Removing the file. Are you sure?'))) {\r\n        const value = [...state.value]\r\n        value.splice(index, 1)\r\n        return {...state, value}\r\n      }\r\n    }, \r\n    onChange: (ev) => (state, actions) => {\r\n      const uploadId = Math.floor((new Date()).getTime() / 1000)\r\n      const files = ev.currentTarget.files\r\n      const results = window.aformsUpload(form.id, item, uploadId, files, actions.onChangeK)\r\n      const value = [...state.value]\r\n      for (let i = 0; i < files.length; i++) {\r\n        if (! results[i]) continue\r\n        value.push({\r\n          key: uploadId + '-' + i, \r\n          name: files[i].name, \r\n          url: null\r\n        })\r\n      }\r\n      return {...state, value}\r\n    }, \r\n    onChangeK: ({uploadId, urls, message:serverMsg}) => (state, actions) => {\r\n      if (serverMsg) {\r\n        window.alert(serverMsg)\r\n      }\r\n      const value = [...state.value]\r\n      urls.forEach((url, i) => {\r\n        const key = uploadId + '-' + i\r\n        const pos = findIndexByProp('key', key, value)\r\n        if (pos == -1) return\r\n        if (url) {\r\n          value[pos] = {...value[pos], url}\r\n        } else {\r\n          value.splice(pos, 1)\r\n        }\r\n      })\r\n      const message = (value.length && state.message) ? null : state.message\r\n      return {...state, value, message}\r\n    }, \r\n    onDragOver: (ev) => (state, actions) => {\r\n      ev.preventDefault()\r\n      return {...state, dragover:true}\r\n    }, \r\n    onDragLeave: (ev) => (state, actions) => {\r\n      return {...state, dragover:false}\r\n    }, \r\n    onDrop: (ev) => (state, actions) => {\r\n      ev.preventDefault()\r\n      const uploadId = Math.floor((new Date()).getTime() / 1000)\r\n      const files = ev.dataTransfer.files\r\n      const results = window.aformsUpload(form.id, item, uploadId, files, actions.onChangeK)\r\n      const value = [...state.value]\r\n      for (let i = 0; i < files.length; i++) {\r\n        if (! results[i]) continue\r\n        value.push({\r\n          key: uploadId + '-' + i, \r\n          name: files[i].name, \r\n          url: null\r\n        })\r\n      }\r\n      return {...state, value, dragover:false}\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst assembleAttrItems = (items) => {\r\n  return items.reduce(({state, actions}, item) => {\r\n    const s = attrItem_table[item.type].initialState(item)\r\n    const a = attrItem_table[item.type].createActions(item)\r\n    return {actions:{...actions, [item.id]:a}, state:{...state, [item.id]:s}}\r\n  }, {actions:{}, state:{}})\r\n}\r\n\r\nconst viewAttrItems = (state, actions) => {\r\n  return (\r\n    <div class=\"wq-Attributes\">\r\n      {form.attrItems.map(item => {\r\n        return attrItem_table[item.type].view(item, state[item.id], actions[item.id])\r\n      })}\r\n    </div>\r\n  )\r\n}\r\nconst viewAttrItemsToConfirm = (state, actions) => {\r\n  return (\r\n    <div class=\"wq-Attributes wq-is-confirming\">\r\n      {form.attrItems.map(item => {\r\n        if (item.type == 'reCAPTCHA3') return null\r\n        const id = `wq-attr-${item.type.toLowerCase()}-${item.id}`\r\n        const value = attrItem_table[item.type].compile(item, state[item.id])\r\n        return (\r\n          <Control label={item.name} required={item.required} id={id} key={id}>\r\n            {item.type == 'File' ? (\r\n              <InputGroup gutter=\"mini\" xclass=\"wq-belongs-attr wq-belongs-file\">\r\n                {value.map((file, i) => {\r\n                  return (\r\n                    <File index={i} key={`file-${i}`} url={file.url} name={file.name} loading={!file.url} ondelete={null} readonly />\r\n                  )\r\n                })}\r\n              </InputGroup>\r\n            ) : (\r\n              <Echo value={value} xclass={`wq-belongs-attr wq_attr-${item.id}`} glue={_T(', ')}></Echo>\r\n            )}\r\n          </Control>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst validateAttrData = (state) => {\r\n  return form.attrItems.reduce((state, item) => {\r\n    const s = attrItem_table[item.type].validate(item, state[item.id])\r\n    if (s === state[item.id]) return state\r\n    return {...state, [item.id]:s}\r\n  }, state)\r\n}\r\n\r\n\r\n/*\r\n * ===============================================================\r\n * domain\r\n */\r\n\r\n// Catalog = string{}\r\n// SelectOption = {id:number, image:?string, name:string, note:?string, normalPrice:?number, price:number, labels:any{}, depends:any{}}\r\n// Select = {type:'Select', id:number, image:?string, name:string, note:?string, multiple:bool, options:SelectOption[]}\r\n// Hidden = {type:'Hidden', id:number, image:?string, category:?string, name:string, price:number, depends:any{}}\r\n// Item = Select | Hidden\r\n// Form = {id:number, items:Item[]}\r\n// SelectedOptions = any{}\r\n// Input = SelectedOptions\r\n// State = {inputs:Input{}, labels:any{}}\r\n// Detail = {category:?string, name:string, unitPrice:number, quantity:number}\r\n\r\n\r\nconst createDetail = (key, category, name, quantity, normalUnitPrice, unitPrice, taxRate) => {\r\n  return {key, category, name, quantity, normalUnitPrice, unitPrice, taxRate}\r\n}\r\n\r\n// inputs -> [inputs, labels, details, total]\r\nconst process = (inputs) => {\r\n  const {env:_env, effectiveTotal:_effectiveTotal, ...rv} = form.detailItems.reduce((cur, item) => {\r\n    return processTable[item.type](cur, item)\r\n  }, {inputs, env:{}, labels:{}, details:[], total:0, normalTotal:0, effectiveTotal:0})\r\n\r\n  if (rule.taxIncluded) return rv\r\n\r\n  const subtotals = rv.details.reduce((subtotals, detail) => {\r\n    const key = detail.taxRate === null ? \"\" : \"\"+detail.taxRate\r\n    const subtotal = (\r\n      subtotals.hasOwnProperty(key) ? subtotals[key] : 0\r\n    ) + normalizePrice(rule, detail.unitPrice * detail.quantity)\r\n    return {...subtotals, [key]:subtotal}\r\n  }, {})\r\n\r\n  const taxes = reduceHash((cur, key, subtotal) => {\r\n    const taxRate = key === \"\" ? rule.taxRate : key\r\n    const tax = normalizePrice(rule, subtotal * taxRate * 0.01)\r\n    return {...cur, [key]:tax}\r\n  }, {}, subtotals)\r\n\r\n  return {...rv, subtotals, taxes}\r\n}\r\nconst processTable = {\r\n  Selector: (cur, item) => {\r\n    if (! cur.inputs.hasOwnProperty(item.id)) {\r\n      return cur\r\n    }\r\n    return item.options.reduce((cur, option) => {\r\n      // We check because there can be a case where the option was cleared and the item had no selection.\r\n      if (! cur.inputs.hasOwnProperty(item.id)) {\r\n        return cur\r\n      }\r\n      const selectedOptions = cur.inputs[item.id]\r\n      if (! selectedOptions.hasOwnProperty(option.id)) {\r\n        return cur\r\n      }\r\n      if (! satisfied(cur.labels, option.depends)) {\r\n        // The dependency not met. Then clear selection.\r\n        const inputs = {...cur.inputs, [item.id]:exclude(selectedOptions, option.id)}\r\n        return {...cur, inputs}\r\n      }\r\n      const quantity0 = findQuantity(cur.inputs, item.quantity, cur.labels, cur.env)\r\n      const quantity = option.type == 'Option' ? quantity0\r\n        : quantity0 * selectedOptions[option.id]\r\n      if (isNaN(quantity)) {\r\n        return cur\r\n      }\r\n      if (typeof option.price != \"number\") {\r\n        const labels = extend(cur.labels, option.labels)\r\n        return {...cur, labels}\r\n      }\r\n      const detail = createDetail(`Option-${item.id}-${option.id}`, item.name, option.name, quantity, option.normalPrice, option.price, option.taxRate)\r\n      const details = [...cur.details, detail]\r\n      const labels = extend(cur.labels, option.labels)\r\n      const price = normalizePrice(rule, detail.unitPrice * detail.quantity)\r\n      const total = cur.total + price\r\n      const normalTotal = cur.normalTotal + normalizePrice(rule, (typeof detail.normalUnitPrice == 'number' ? detail.normalUnitPrice : detail.unitPrice) * detail.quantity)\r\n      const effectiveTotal = cur.effectiveTotal + price\r\n      return {...cur, details, labels, total, normalTotal, effectiveTotal}\r\n    }, cur)\r\n  }, \r\n  Auto: (cur, item) => {\r\n    if (! satisfied(cur.labels, item.depends)) {\r\n      return cur\r\n    }\r\n    const quantity = findQuantity(cur.inputs, item.quantity, cur.labels, cur.env)\r\n    if (isNaN(quantity)) {\r\n      return cur\r\n    }\r\n    const unitPrice = evalExpr(item.priceAst, item.priceVars, cur.effectiveTotal, cur.inputs, cur.labels, cur.env, item.price)\r\n    if (isNaN(unitPrice)) {\r\n      return cur\r\n    }\r\n    const detail = createDetail(`Auto-${item.id}`, item.category, item.name, quantity, item.normalPrice, unitPrice, item.taxRate)\r\n    const details = [...cur.details, detail]\r\n    const price = normalizePrice(rule, detail.unitPrice * detail.quantity)\r\n    const total = cur.total + price\r\n    const normalTotal = cur.normalTotal + normalizePrice(rule, (typeof detail.normalUnitPrice == 'number' ? detail.normalUnitPrice : detail.unitPrice) * detail.quantity)\r\n    const effectiveTotal = cur.effectiveTotal + price\r\n    return {...cur, details, total, normalTotal, effectiveTotal}\r\n  }, \r\n  Adjustment: (cur, item) => {\r\n    if (! satisfied(cur.labels, item.depends)) {\r\n      return cur\r\n    }\r\n    const quantity = findQuantity(cur.inputs, item.quantity, cur.labels, cur.env)\r\n    if (isNaN(quantity)) {\r\n      return cur\r\n    }\r\n    const unitPrice = evalExpr(item.priceAst, item.priceVars, cur.effectiveTotal, cur.inputs, cur.labels, cur.env, item.price)\r\n    if (isNaN(unitPrice)) {\r\n      return cur\r\n    }\r\n    const detail = createDetail(`Adjustment-${item.id}`, item.category, item.name, quantity, item.normalPrice, unitPrice, item.taxRate)\r\n    const details = [...cur.details, detail]\r\n    const price = normalizePrice(rule, detail.unitPrice * detail.quantity)\r\n    const total = cur.total + price\r\n    const normalTotal = cur.normalTotal + normalizePrice(rule, (typeof detail.normalUnitPrice == 'number' ? detail.normalUnitPrice : detail.unitPrice) * detail.quantity)\r\n    return {...cur, details, total, normalTotal}\r\n  }, \r\n  PriceWatcher: (cur, item) => {\r\n    if (! compare2(cur.effectiveTotal, item.lower, item.lowerIncluded, item.higher, item.higherIncluded)) {\r\n      return cur\r\n    }\r\n    const labels = extend(cur.labels, item.labels)\r\n    return {...cur, labels}\r\n  }, \r\n  QuantityWatcher: (cur, item) => {\r\n    if (item.target == -1) return cur\r\n    const value = findQuantity(cur.inputs, item.target, cur.labels, cur.env)\r\n    if (isNaN(value)) return cur\r\n    if (! compare2(value, item.lower, item.lowerIncluded, item.higher, item.higherIncluded)) return cur\r\n    const labels = extend(cur.labels, item.labels)\r\n    return {...cur, labels}\r\n  }, \r\n  Quantity: (cur, item) => {\r\n    if (! cur.inputs.hasOwnProperty(item.id)) {\r\n      const inputs = {...cur.inputs, [item.id]:item.initial}\r\n      return {...cur, inputs}\r\n    }\r\n    return cur\r\n  }, \r\n  Slider: (cur, item) => {\r\n    if (! cur.inputs.hasOwnProperty(item.id)) {\r\n      const inputs = {...cur.inputs, [item.id]:item.initial}\r\n      return {...cur, inputs}\r\n    }\r\n    return cur\r\n  }, \r\n  AutoQuantity: (cur, item) => {\r\n    const q = evalExpr(item.quantityAst, item.quantityVars, cur.effectiveTotal, cur.inputs, cur.labels, cur.env, item.quantity)\r\n    if (isNaN(q)) {\r\n      return cur\r\n    }\r\n    const env = {...cur.env, [item.id]:q}\r\n    return {...cur, env}\r\n  }, \r\n  Stop: (cur, item, attrs) => {\r\n    return cur\r\n  }\r\n}\r\n\r\n\r\nconst validateDetailDataForItem = (detailData, item, labels) => {\r\n  const msg = validate_table[item.type](detailData, item, labels)\r\n  return msg\r\n}\r\nconst validateDetailData = (detailData, labels) => {\r\n  return form.detailItems.reduce((messages, item) => {\r\n    const message = validate_table[item.type](detailData, item, labels)\r\n    if (message) {\r\n      if (item.type == 'Stop') {\r\n        return {stopMessage:message, ...messages}\r\n      } else {\r\n        return {...messages, [item.id]:message}\r\n      }\r\n    } else {\r\n      return messages\r\n    }\r\n  }, {})\r\n}\r\nconst validate_table = {\r\n  Selector: (detailData, item, labels) => {\r\n    if (detailData.hasOwnProperty(item.id)) return null\r\n    if (item.multiple) return null\r\n    if (item.options.every(option => !satisfied(labels, option.depends))) return null\r\n    return MSG_TOSELECT\r\n  }, \r\n  Auto: (detailData, item, labels) => null, \r\n  Adjustment: (detailData, item, labels) => null, \r\n  PriceWatcher: (detailData, item, labels) => null, \r\n  QuantityWatcher: (detailData, item, labels) => null, \r\n  Quantity: (detailData, item, labels) => {\r\n    if (!satisfied(labels, item.depends)) return null\r\n    if (! detailData.hasOwnProperty(item.id) || detailData[item.id] === \"\") return MSG_REQUIRED\r\n    const value = item.allowFraction ? parseFloat(detailData[item.id]) : parseInt(detailData[item.id], 10)\r\n    if (isNaN(value) || value+\"\" != detailData[item.id]) return MSG_INVALID\r\n    if (item.minimum !== null && item.minimum > value) return MSG_TOOSMALL\r\n    if (item.maximum !== null && item.maximum < value) return MSG_TOOLARGE\r\n    return null\r\n  }, \r\n  Slider: (detailData, item, labels) => {\r\n    if (!satisfied(labels, item.depends)) return null\r\n    if (! detailData.hasOwnProperty(item.id) || detailData[item.id] === \"\") return MSG_REQUIRED\r\n    const value = parseFloat(detailData[item.id])\r\n    if (isNaN(value) || value+\"\" != detailData[item.id]) return MSG_INVALID\r\n    return null\r\n  }, \r\n  AutoQuantity: (detailData, item, labels) => null, \r\n  Stop: (detailData, item, labels) => {\r\n    //return null\r\n    if (!satisfied(labels, item.depends)) return null\r\n    return item.message\r\n  }\r\n}\r\n\r\nconst detailActions = {\r\n  selectChange: (ev) => ({data, messages, ...others}, _actions) => {\r\n    const [sid, oid] = ev.target.dataset['path'].split('/')\r\n    if (! data.hasOwnProperty(sid)) data[sid] = {}\r\n    const selector = findByProp(\"id\", sid, form.detailItems)\r\n    const option = findByProp(\"id\", oid, selector.options)\r\n    if (selector.multiple) {\r\n      if (option.type == 'Option') {\r\n        if (ev.target.checked) {\r\n          data = {...data, [sid]:{...data[sid], [oid]:true}}\r\n        } else {\r\n          const selectedOptions = data[sid]\r\n          data = {...data, [sid]:exclude(selectedOptions, oid)}\r\n        }\r\n      } else {\r\n        if (ev.target.value != \"\") {\r\n          data = {...data, [sid]:{...data[sid], [oid]:ev.target.value}}\r\n        } else {\r\n          // deselect\r\n          const selectedOptions = data[sid]\r\n          data = {...data, [sid]:exclude(selectedOptions, oid)}\r\n        }\r\n      }\r\n      // messagesは変更しない。multiple selectorではmessageは発生しない。\r\n    } else {\r\n      if (option.type == 'Option') {\r\n        data = {...data, [sid]:{[oid]:true}}\r\n      } else {\r\n        data = {...data, [sid]:{[oid]:ev.target.value}}\r\n      }\r\n      messages = exclude(messages, selector.id)\r\n    }\r\n    const {inputs, ...rest} = process(data)\r\n    return {...others, ...rest, messages, data:inputs}\r\n  }, \r\n  textInput: (ev) => ({data, ...rest}, _actions) => {\r\n    const id = branchNo(ev.currentTarget.id, '-')\r\n    data = {...data, [id]:ev.currentTarget.value}\r\n    if (ev.currentTarget.type == 'number' && ev.currentTarget != window.activeElement) {\r\n      // for firfox\r\n      ev.currentTarget.focus()\r\n    }\r\n    return {...rest, data}\r\n  }, \r\n  textBlur: (ev) => ({data, messages, ...others}, _actions) => {\r\n    const id = branchNo(ev.currentTarget.id, '-')\r\n    const item = findByProp(\"id\", id, form.detailItems)\r\n    if (data[id] === \"\") {\r\n      messages = {...messages, [id]:MSG_REQUIRED}\r\n      return {...rest, data, messages}\r\n    }\r\n    const value = item.allowFraction ? parseFloat(data[id]) : parseInt(data[id], 10)\r\n    if (isNaN(value) || value+\"\" != data[id]) {\r\n      messages = {...messages, [id]:MSG_INVALID}\r\n      return {...rest, data, messages}\r\n    }\r\n    if (item.minimum !== null && item.minimum > value) {\r\n      messages = {...messages, [id]:MSG_TOOSMALL}\r\n      return {...rest, data, messages}\r\n    }\r\n    if (item.maximum !== null && item.maximum < value) {\r\n      messages = {...messages, [id]:MSG_TOOLARGE}\r\n      return {...rest, data, messages}\r\n    }\r\n    data = {...data, [id]:value}\r\n    messages = exclude(messages, id)\r\n    const {inputs, ...rest} = process(data)\r\n    return {...others, ...rest, data:inputs, messages}\r\n  }, \r\n  rangeBlur: (ev) => ({data, ...others}, _actions) => {\r\n    const id = branchNo(ev.currentTarget.id, '-')\r\n    const item = findByProp(\"id\", id, form.detailItems)\r\n    data = {...data, [id]:ev.currentTarget.value}\r\n    const {inputs, ...rest} = process(data)\r\n    return {...others, ...rest, data:inputs}\r\n  }\r\n}\r\n\r\n\r\nconst createDetailState = () => {\r\n  const {inputs:data, ...rest} = process({})\r\n  return {...rest, data, messages:{}}\r\n}\r\n\r\nconst onback = (ev) => (state, actions) => {\r\n  window.setTimeout(() => {\r\n    scrollTo('root')\r\n  }, 100)\r\n  return {...state, viewMode:form.navigator}\r\n}\r\n\r\nconst onaction = (ev) => (state, actions) => {\r\n  // validate\r\n  const {stopMessage, ...detailMessages} = validateDetailData(state.details.data, state.details.labels)\r\n  const attrs = validateAttrData(state.attrs)\r\n  const attrMessages = reduceHash((cur, cid, stt) => {\r\n    return (stt.message == null) ? cur : {...cur, [cid]:stt.message}\r\n  }, {}, attrs)\r\n  if (stopMessage || Object.keys(detailMessages).length || Object.keys(attrMessages).length) {\r\n    // validation failed\r\n    window.requestAnimationFrame(() => {\r\n      if (Object.keys(detailMessages).length) focusErrorInput('wq_detail-', detailMessages)\r\n      else if (stopMessage) window.alert(stopMessage)\r\n      else if (Object.keys(attrMessages).length) focusErrorInput('wq_attr-', attrMessages)\r\n    }, 100)\r\n    const details = {...state.details, messages:detailMessages}\r\n    return {...state, details, attrs}\r\n  }\r\n\r\n  const action = ev.currentTarget.dataset['action']\r\n  if (action == 'confirm') {\r\n    // show confirm view\r\n    window.setTimeout(() => {\r\n      scrollTo('root')\r\n    }, 100)\r\n    return {...state, viewMode:'confirm'}\r\n  }\r\n\r\n  const extId = ev.currentTarget.dataset['id']\r\n\r\n  const kontinue = (attrs) => {\r\n    if (mode == 'preview') {\r\n      window.requestAnimationFrame(() => {window.alert(_T('Processing stopped due to preview mode.'))});\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      formId: form.id, \r\n      details: state.details.data, \r\n      attrs\r\n    }\r\n    if (action == 'custom') {\r\n      submitCustom(data, actions.onactionK, extId)\r\n    } else {\r\n      submit(data, actions.onactionK)\r\n    }\r\n  }\r\n\r\n  window.requestAnimationFrame(() => {\r\n    let waitCount = 0\r\n    let compiledAttrs = {}\r\n    form.attrItems.forEach(item => {\r\n      const val = attrItem_table[item.type].compile(item, attrs[item.id])\r\n      if (typeof val == 'function') {\r\n        const postfix = (dataValue) => {\r\n          waitCount--\r\n          compiledAttrs[item.id] = dataValue\r\n          if (waitCount == 0) kontinue(compiledAttrs)\r\n        }\r\n        waitCount++\r\n        val(postfix)\r\n      } else {\r\n        compiledAttrs[item.id] = val\r\n      }\r\n    })\r\n    if (waitCount == 0) kontinue(compiledAttrs)\r\n  })\r\n  \r\n  return {...state, loading:true}\r\n}\r\n\r\nconst onactionK = (resp) => (state, actions) => {\r\n  const handleOption = (option, k) => {\r\n    if (option) {\r\n      if (option.action == 'open') {\r\n        if (window.open(option.data)) {\r\n          k(true)\r\n        } else {\r\n          const k2 = (res) => {window.setTimeout(() => k(res), 300)}\r\n          window.aformsDialog(_T('Your document is ready.'), option.data, _T('Open'), k2, _T('Skip'))\r\n        }\r\n      } else {\r\n        k(false)\r\n      }\r\n    } else {\r\n      k(false)\r\n    }\r\n  }\r\n  window.requestAnimationFrame(() => {\r\n    if (resp.action == 'show') {\r\n      handleOption(resp.option, (_x) => {\r\n        window.aformsDialog(resp.data, null, null, (_x) => {})\r\n        //window.alert(resp.data)\r\n      })\r\n    } else if (resp.action == 'open') {\r\n      handleOption(resp.option, (_x) => {window.location.href = resp.data})\r\n    } else {  // action == none\r\n      // do nothing\r\n      handleOption(resp.option, (_x) => {})\r\n    }\r\n  })\r\n  if (resp.clearLoading) {\r\n    return {...state, loading:false}\r\n  } else {\r\n    // we don't set state.loading to `false`.\r\n  }\r\n}\r\n\r\nconst onHideMonitor = (ev) => (state, actions) => {\r\n  return {...state, spMonitorShown:false}\r\n}\r\nconst onShowMonitor = (ev) => (state, actions) => {\r\n  return {...state, spMonitorShown:true}\r\n}\r\n\r\nconst findNextIndex = (current, labels) => {\r\n  const len = form.detailItems.length\r\n  for (let i = 0; i < len; i++) {\r\n    if (i <= current) continue;\r\n    const item = form.detailItems[i]\r\n    if (item.type == \"Selector\") {\r\n      if (item.options.some(option => satisfied(labels, option.depends))) {\r\n        return i\r\n      }\r\n      // thru\r\n    } else if (item.type == \"Quantity\" || item.type == \"Slider\") {\r\n      if (satisfied(labels, item.depends)) {\r\n        return i\r\n      }\r\n      // thru\r\n    }\r\n  }\r\n  return form.detailItems.length\r\n}\r\n\r\nconst findPrevIndex = (current, labels) => {\r\n  if (current <= 0) return -1\r\n  const indice = form.detailItems.reduce((cur, item, i) => {\r\n    if (current <= i) return cur\r\n    if (item.type == \"Selector\") {\r\n      if (item.options.some(option => satisfied(labels, option.depends))) {\r\n        cur.push(i)\r\n      }\r\n    } else if (item.type == \"Quantity\" || item.type == \"Slider\") {\r\n      if (satisfied(labels, item.depends)) {\r\n        cur.push(i)\r\n      }\r\n    }\r\n    return cur\r\n  }, [])\r\n  return (indice.length > 0) ? indice.pop() : -1\r\n}\r\n\r\nconst onWizardOpen = (ev) => (state, actions) => {\r\n  const wIndex = findNextIndex(-1, state.details.labels)\r\n  return {...state, wIndex, wIndex2:wIndex, wizardOpen:true, wFlipped:false}\r\n}\r\nconst onWizardClose = (ev) => (state, actions) => {\r\n  return {...state, wIndex:-1, wIndex2:-1, wizardOpen:false}\r\n}\r\nconst onWizardNext = (ev) => (state, actions) => {\r\n  const item = form.detailItems[state.wIndex]\r\n  const msg = validateDetailDataForItem(state.details.data, item, state.details.labels)\r\n  if (msg) {\r\n    const messages = {...state.details.messages, [item.id]:msg}\r\n    const details = {...state.details, messages}\r\n    return {...state, details}\r\n  }\r\n  const wIndex = findNextIndex(state.wIndex, state.details.labels)\r\n  if (wIndex == form.detailItems.length) {\r\n    window.setTimeout(actions.onWizardClose, 800)\r\n    window.setTimeout(() => {\r\n      scrollTo('wq-monitor')\r\n    }, 800)\r\n  } else {\r\n    window.setTimeout(() => actions.onWizardNextK(wIndex), 400)\r\n  }\r\n  return {...state, wIndex, wFlipped:false}\r\n}\r\nconst onWizardNextK = (wIndex2) => (state, actions) => {\r\n  return {...state, wIndex2}\r\n}\r\nconst onWizardPrev = (ev) => (state, actions) => {\r\n  const wIndex = findPrevIndex(state.wIndex, state.details.labels)\r\n  window.setTimeout(() => actions.onWizardPrevK(wIndex), 400)\r\n  return {...state, wIndex, wFlipped:true}\r\n}\r\nconst onWizardPrevK = (wIndex2) => (state, actions) => {\r\n  return {...state, wIndex2}\r\n}\r\nconst calcMonitorPos = (sidebar) => {\r\n  const container = document.getElementById('root').children[0]\r\n  const target = document.getElementById('wq-monitor')\r\n  const crect = container.getBoundingClientRect()\r\n  const srect = sidebar.getBoundingClientRect()\r\n  const vtop = crect.top\r\n  const vbot = crect.bottom\r\n  const ch = target.getBoundingClientRect().height\r\n  if (vtop > sidebarOffset) {\r\n    // childをcontainerの上部にくっつける\r\n    return {v:'top', left:srect.left - crect.left, width:srect.width}\r\n  } else if (vbot < ch) {\r\n    // childをcontainerの下部にくっつける\r\n    return {v:'bottom', left:srect.left - crect.left, width:srect.width}\r\n  } else {\r\n    // childを画面にくっつける\r\n    return {v:'screen', left:srect.left, width:srect.width}\r\n  }\r\n}\r\nconst onscroll = (ev) => (state, actions) => {\r\n  if (state.viewMode == 'confirm') return null\r\n  const sidebar = document.querySelector(wqData.sidebarSelector)\r\n  if (! sidebar) return null\r\n  return {...state, monitorPos:calcMonitorPos(sidebar)}\r\n}\r\nconst onresize = (ev) => (state, actions) => {\r\n  if (state.viewMode == 'confirm') return null\r\n  const sidebar = document.querySelector(wqData.sidebarSelector)\r\n  if (! sidebar) return null\r\n  return {...state, monitorPos:calcMonitorPos(sidebar)}\r\n}\r\n\r\n/*\r\n * ===============================================================\r\n * App\r\n */\r\n\r\n//var allActions = null;\r\n//var form = null;\r\n\r\nconst NavBar = ({state, max, current, actions, navigator}) => {\r\n  const percentage = 100 * Math.min(max, current) / max\r\n  return (\r\n    <div class={`wq-NavBar ${state.viewMode == 'confirm' ? 'wq-is-confirming' : ''} ${state.spMonitorShown ? 'wq-is-monitor-shown' : ''} wq-belongs-${navigator}`} key=\"navbar\">\r\n      <div class={`wq--progress ${max < current ? 'wq-is-finished' : ''}`}>\r\n        <div class=\"wq--bar\">\r\n          <div class=\"wq--bar-content\" style={{width:percentage+'%', height:percentage+'%'}} />\r\n        </div>\r\n        <div class=\"wq--min\">1</div>\r\n        <div class=\"wq--current\">{current}</div>\r\n        <div class=\"wq--max\">{max}</div>\r\n        <div class=\"wq--percentage\">{Math.floor(percentage)}</div>\r\n      </div>\r\n      <div class=\"wq--summary\">{pricePrefix + nf(state.details.total) + priceSuffix}</div>\r\n      <div class=\"wq--commands\">\r\n        <Button type=\"normal\" onclick={actions.onShowMonitor} xclass=\"wq-belongs-navbar wq-for-showmonitor\">{_Tv('Show Monitor')}</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst view = (state, actions) => {\r\n  const steps = form.detailItems.length\r\n  const position = state.wIndex\r\n  const actionSpecs = (state.viewMode == 'confirm') ? actionSpecMap.confirm : actionSpecMap.input\r\n  const actionButtons = actionSpecs.map(spec => {\r\n    return (\r\n      <Button type={spec.buttonType} onclick={actions.onaction} disabled={state.loading} xclass={`wq-belongs-action wq-for-${spec.action}`} data-action={spec.action} data-id={spec.id}>{spec.label}</Button>\r\n    )\r\n  })\r\n  return (\r\n    <form class={`wq-Form ${(state.viewMode == 'confirm' ? 'wq-is-confirming' : '')}`} id={`form-${form.id}`} novalidate>\r\n      <input type=\"text\" id=\"wq-informer\" name=\"to-disable-auto-submission\" style=\"display:none;\" />\r\n      {state.viewMode == 'confirm' ? (\r\n        <div class=\"wq--lead\">\r\n          <p class=\"wq--leadText\">{_Tv('Please check your entry.')}</p>\r\n          <Button type=\"normal\" onclick={actions.onback} disabled={state.loading} xclass=\"wq-for-back\">{_Tv('Back')}</Button>\r\n        </div>\r\n      ) : null}\r\n      {steps > 0 && state.viewMode == 'horizontal' ? (\r\n        <HNavigator data={state.details.data} onoptionchange={actions.details.selectChange} labels={state.details.labels} messages={state.details.messages} ontextinput={actions.details.textInput} ontextblur={actions.details.textBlur} onrangeblur={actions.details.rangeBlur}>\r\n          <NavBar state={state} actions={actions} current={position} max={steps} navigator=\"hnavigator\"></NavBar>\r\n        </HNavigator>\r\n      ) : null}\r\n      {steps > 0 && state.viewMode == 'wizard' ? (\r\n        <WNavigator data={state.details.data} onoptionchange={actions.details.selectChange} labels={state.details.labels} messages={state.details.messages} onWizardNext={actions.onWizardNext} onWizardPrev={actions.onWizardPrev} onWizardOpen={actions.onWizardOpen} onWizardClose={actions.onWizardClose} current={state.wIndex} current2={state.wIndex2} open={state.wizardOpen} flipped={state.wFlipped} ontextinput={actions.details.textInput} ontextblur={actions.details.textBlur} onrangeblur={actions.details.rangeBlur}>\r\n          <NavBar state={state} actions={actions} current={position} max={steps} navigator=\"wnavigator\"></NavBar>\r\n        </WNavigator>\r\n      ) : null}\r\n      {steps > 0 ? (\r\n        <Monitor detailsState={state.details} confirming={state.viewMode == 'confirm'} spShown={state.spMonitorShown} onHide={actions.onHideMonitor} monitorPos={state.monitorPos} />\r\n      ) : null}\r\n      {(form.attrItems.length > 0) ? (\r\n        state.viewMode == 'confirm' ? viewAttrItemsToConfirm(state.attrs, actions.attrs) : viewAttrItems(state.attrs, actions.attrs)\r\n      ) : null}\r\n      {actionButtons.length > 0 ? (\r\n        <Control label=\"\" required={false} message={null} note={null} id=\"wq-action\" xclass=\"wq-for-action\">\r\n          <InputGroup gutter=\"mini\">\r\n            {actionButtons}\r\n          </InputGroup>\r\n        </Control>\r\n      ) : null}\r\n    </form>\r\n  )\r\n}\r\n\r\n// wqData = {form, controls, catalog, rule}\r\nconst form = wqData.form;\r\nconst catalog = wqData.catalog;\r\nconst rule = wqData.rule;\r\nconst behavior = wqData.behavior;\r\nconst mode = wqData.mode;\r\nconst submitUrl = wqData.submitUrl;\r\nconst customUrl = wqData.customUrl;\r\nconst [pricePrefix, priceSuffix] = catalog['$%s'].split('%s')\r\nconst actionSpecMap = wqData.actionSpecMap;\r\n\r\nconst init = () => {\r\n  const {state:cState, actions:cActions} = assembleAttrItems(form.attrItems)\r\n  const state = {\r\n    details: createDetailState(), \r\n    attrs: cState, \r\n    viewMode: form.navigator,  // horizontal, confirm\r\n    loading: false, \r\n    spMonitorShown: false, \r\n    wIndex: -1, \r\n    wIndex2: -1,  // スライドの遷移とアクションボタンの更新タイミングをずらすために導入。本当はwIndexだけでいいが、これが無いとスライドがうまく動かないケースがある。\r\n    wizardOpen: false, \r\n    wFlipped: false, \r\n    monitorPos: {v:'top', left:5000, width:0}\r\n  }\r\n  const actions = {\r\n    details: detailActions, \r\n    attrs: cActions, \r\n    onback, \r\n    onaction, \r\n    onactionK, \r\n    onHideMonitor, \r\n    onShowMonitor, \r\n    onWizardClose, \r\n    onWizardOpen, \r\n    onWizardNext, \r\n    onWizardNextK, \r\n    onWizardPrev, \r\n    onWizardPrevK, \r\n    onscroll, \r\n    onresize\r\n  }\r\n  return app(state, actions, view, document.getElementById('root'))\r\n}\r\nconst allActions = init();\r\n\r\nlet sidebarOffset = 0;\r\nif (wqData.sidebarSelector && form.navigator == 'horizontal') {\r\n  window.setTimeout(() => {\r\n    //console.log('binding', wqData.sidebarSelector)\r\n    sidebarOffset = getComputedStyle(document.getElementById('wq-informer')).top.slice(0, -2)\r\n    document.addEventListener('scroll', allActions.onscroll)\r\n    window.addEventListener('resize', allActions.onresize)\r\n    allActions.onscroll(null)\r\n  }, 100)\r\n}\r\n","import { h } from 'hyperapp';\r\n\r\n\r\nexport const tnOnCreate = (el) => {\r\n  el.classList.add('wq-is-created')\r\n  el.classList.add('wq-is-run')\r\n  el.classList.add('wq-for-created')\r\n  window.setTimeout(() => {\r\n    el.classList.remove('wq-is-created')\r\n    const h =  (ev) => {\r\n      if (ev.target !== el) return;\r\n      el.classList.remove('wq-is-run')\r\n      el.classList.remove('wq-for-created')\r\n      el.removeEventListener('transitionend', h)\r\n    }\r\n    el.addEventListener('transitionend', h)\r\n    window.setTimeout(() => {\r\n      el.classList.remove('wq-is-run')\r\n      el.classList.remove('wq-for-created')\r\n      el.removeEventListener('transitionend', h)\r\n    }, 800)\r\n  }, 100)\r\n}\r\n\r\nexport const tnOnRemove = (el, done) => {\r\n  el.classList.add('wq-is-run')\r\n  el.classList.add('wq-for-removed')\r\n  window.setTimeout(() => {\r\n    var doneCalled = false\r\n    el.classList.add('wq-is-removed')\r\n    el.addEventListener('transitionend', (ev) => {\r\n      if (ev.target !== el) return;\r\n      el.classList.remove('wq-is-run')\r\n      el.classList.remove('wq-for-removed')\r\n      if (! doneCalled) {\r\n        done()\r\n        doneCalled = true\r\n      }\r\n    })\r\n    window.setTimeout(() => {\r\n      el.classList.remove('wq-is-run')\r\n      el.classList.remove('wq-for-removed')\r\n      if (! doneCalled) {\r\n        done()\r\n        doneCalled = true\r\n      }\r\n    }, 800)\r\n  }, 100)\r\n}\r\n\r\n\r\n\r\nexport const Image = (\r\n    {\r\n      src, \r\n      scaling = 'center', \r\n      alt = '', \r\n      xclass = ''\r\n    }) => {\r\n  const style = {backgroundImage: \"url(\"+src+\")\"}\r\n  return (\r\n    <div class={`wq-Image wq-scaling-${scaling} ${xclass} ${src ? '' : 'wq-src-empty'}`} style={style} title={alt}>\r\n      <img src={src} alt={alt} class=\"wq--img\" />\r\n    </div> \r\n  )\r\n}\r\n\r\nexport const TextInput = (\r\n    {\r\n      type, \r\n      size,  // full(100%), nano(3em), mini(4em), small(7em), normal(11em)\r\n      name, \r\n      placeholder, \r\n      value, \r\n      invalid = false, \r\n      oninput, \r\n      onblur, \r\n      xclass = ''\r\n    }) => {\r\n  const isInvalid = (invalid) ? 'wq-is-invalid' : ''\r\n  const id = `wq-text-${name}`\r\n  return (\r\n    <input type={type} class={`wq-TextInput wq-size-${size} ${isInvalid} ${xclass}`} id={id} name={name} placeholder={placeholder} value={value} oninput={oninput} onblur={onblur} />\r\n  )\r\n}\r\n\r\nexport const TextArea = (\r\n    {\r\n      name, \r\n      placeholder, \r\n      value, \r\n      size = 'normal',  // full, normal, small, mini, nano\r\n      invalid = false, \r\n      oninput, \r\n      onblur, \r\n      xclass = ''\r\n    }) => {\r\n  const isInvalid = (invalid) ? 'wq-is-invalid' : ''\r\n  const id = `wq-textarea-${name}`\r\n  return (\r\n    <textarea class={`wq-TextArea ${isInvalid} wq-size-${size} ${xclass}`} id={id} name={name} placeholder={placeholder} value={value} oninput={oninput} onblur={onblur} />\r\n  )\r\n}\r\n\r\nexport const RadioButton = (\r\n    {\r\n      index, \r\n      name, \r\n      value, \r\n      checked, \r\n      invalid = false, \r\n      onchange, \r\n      xclass = '', \r\n      inputXclass = ''\r\n    }, children) => {\r\n  const id = `wq-radio-${name}-${index}`\r\n  const isInvalid = (invalid) ? 'wq-is-invalid' : ''\r\n  return (\r\n    <div class={`wq-Radio ${xclass}`} id={id+'-wrapper'}>\r\n      <input type=\"radio\" name={name} value={value} checked={checked} onchange={onchange} id={id} class={`${isInvalid} ${inputXclass}`} />\r\n      <label for={id}>{children}</label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Checkbox = (\r\n    {\r\n      name, \r\n      value, \r\n      checked, \r\n      invalid = false, \r\n      onchange, \r\n      xclass = '', \r\n      id = null, \r\n      inputXclass = ''\r\n    }, children) => {\r\n  if (id === null) id = `wq-checkbox-${name}`\r\n  const isInvalid = (invalid) ? 'wq-is-invalid' : ''\r\n  return (\r\n    <div class={`wq-Checkbox ${xclass}`} id={id+'-wrapper'}>\r\n      <input type=\"checkbox\" name={name} value={value} checked={checked} onchange={onchange} id={id} class={`${isInvalid} ${inputXclass}`} />\r\n      <label for={id}>{children}</label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Select = (\r\n    {\r\n      name, \r\n      options, \r\n      value, \r\n      invalid = false, \r\n      onchange, \r\n      placeholder, \r\n      xclass = '', \r\n      inputXclass = ''\r\n    }) => {\r\n  const id = `wq-select-${name}`\r\n  const isInvalid = (invalid) ? 'wq-is-invalid' : ''\r\n  placeholder = placeholder || \"\"\r\n  return (\r\n    <div class={`wq-Select ${xclass}`} id={id+'-wrapper'}>\r\n      <select class=\"wq--input\" name={name} onchange={onchange} id={id} class={`wq--input ${isInvalid} ${inputXclass}`}>\r\n        <option value=\"\" disabled selected={!value}>{placeholder}</option>\r\n        {options.map(o => (\r\n          <option value={o} selected={o == value}>{o}</option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Range = (\r\n    {\r\n      name, \r\n      min, \r\n      max, \r\n      step, \r\n      value, \r\n      invalid = false, \r\n      oninput, \r\n      onchange, \r\n      xclass = '', \r\n      suffix = '', \r\n      inputXclass = ''\r\n    }) => {\r\n  const id = `wq-range-${name}-wrapper`\r\n  const isInvalid = (invalid) ? 'wq-is-invalid' : ''\r\n  const steps = (max - min + 1) / step\r\n  const size = (steps <= 2) ? 'nano'\r\n             : (steps <= 4) ? 'mini'\r\n             : (steps <= 6) ? 'small'\r\n             : (steps <= 10) ? 'medium' \r\n             : (steps <= 16) ? 'large'\r\n             : 'xlarge' \r\n  return (\r\n    <div class={`wq-Range ${isInvalid} wq-size-${size} ${xclass}`} id={id}>\r\n      <span class=\"wq--label wq-for-min\">{min}</span>\r\n      <input type=\"range\" class={`wq--input ${inputXclass}`} name={name} id={name} value={value} min={min} max={max} step={step} oninput={oninput} onchange={onchange} />\r\n      <span class=\"wq--label wq-for-max\">{max}</span>\r\n      <span class=\"wq--state\">{value}<span class=\"wq--state-suffix\">{suffix}</span></span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const FileInput = (\r\n    {\r\n      name, \r\n      extensions, \r\n      onchange, \r\n      multiple, \r\n      invalid = false, \r\n      inputProps = {}, \r\n      xclass = \"\", \r\n      inputXclass = \"\", \r\n      ...props\r\n    }, children) => {\r\n  const accept = extensions.split(',').map(s => '.' + s.trim()).join(',')\r\n  const inputId = 'wq-file-' + name\r\n  return (\r\n    <div class={`wq-FileInput ${invalid ? 'wq-is-invalid' : ''} ${xclass}`} {...props}>\r\n      <input type=\"file\" id={inputId} class={`wq--input ${inputXclass}`} onchange={onchange} accept={accept} {...inputProps} multiple={multiple} />\r\n      <label class=\"wq--label\" for={inputId}><span class=\"wq--text\">{children}</span></label>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst isViewable = (name) => {\r\n  const i = name.lastIndexOf('.')\r\n  const ext = name.slice(i + 1).trim().toLowerCase()\r\n  return (\" jpeg jpg gif png \".indexOf(ext) != -1)\r\n}\r\nexport const File = (\r\n    {\r\n      url, \r\n      name, \r\n      loading, \r\n      ondelete, \r\n      deleteText, \r\n      index, \r\n      readonly = false, \r\n      ...props\r\n    }\r\n) => {\r\n  const viewable = url && isViewable(name)\r\n  return (\r\n    <div class={`wq-File wq-lct-enabled ${loading ? 'wq-is-loading' : ''} ${viewable ? 'wq-is-viewable' : ''} ${readonly ? 'wq-is-readonly' : ''}`} oncreate={tnOnCreate} onremove={tnOnRemove} {...props}>\r\n      {viewable ? (\r\n        <Image src={url} alt={name} scaling=\"cover\" xclass=\"wq-belongs-file\" title={name} />\r\n      ) : null}\r\n      <div class=\"wq--filename\" title={name}>{name}</div>\r\n      {!readonly ? (\r\n        <div class=\"wq--actions\">\r\n          <Button onclick={ondelete} xclass=\"wq-belongs-file wq-for-delete\" data-index={index}></Button>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Echo = (\r\n    {\r\n      name, \r\n      value, \r\n      glue, \r\n      xclass = ''\r\n    }) => {\r\n  const id = `wq-echo-${name}`\r\n  value = (Array.isArray(value)) ? value.join(glue) \r\n        : (value === null) ? ''\r\n        : value\r\n  const lines = value.split(/\\r?\\n/).reduce((result, line) => {\r\n    result.push(line)\r\n    result.push(<br></br>)\r\n    return result\r\n  }, [])\r\n  return (\r\n    <div class={`wq-Echo ${xclass}`} id={id}>{lines}</div>\r\n  )\r\n}\r\n\r\nexport const Button = (\r\n    {\r\n      type = 'normal',  // normal, primary\r\n      disabled = false, \r\n      xclass = '', \r\n      onclick, \r\n      name = null, \r\n      ...props\r\n    }, children) => {\r\n  return (\r\n    <button type=\"button\" name={name} class={`wq-Button wq-type-${type} ${xclass}`} disabled={disabled} onclick={onclick} {...props}>{children}</button>\r\n  )\r\n}\r\n\r\nexport const InputGroup = (\r\n    {\r\n      gutter = 'none',  // none, small, mini\r\n      xclass = '', \r\n    }, children) => {\r\n  return (\r\n    <div class={`wq-InputGroup wq-gutter-${gutter} ${xclass}`}>{children}</div>\r\n  )\r\n}\r\n\r\nexport const Control = (\r\n    {\r\n      label, \r\n      required, \r\n      message, \r\n      note, \r\n      requiredText, \r\n      xclass = '', \r\n      id = null, \r\n      key = null\r\n    }, input) => {\r\n  return (\r\n    <div class={`wq-Control wq-lct-enabled ${xclass}`} id={id} oncreate={tnOnCreate} onremove={tnOnRemove} key={key}>\r\n      <div class={`wq--header ${label ? '' : 'wq-content-empty'}`}>\r\n        <span class=\"wq--label\">{label}</span>\r\n        <span class={`wq--required ${!required ? 'wq-is-optional' : ''}`}>{requiredText}</span>\r\n      </div>\r\n      <div class=\"wq--body\">\r\n        {input}\r\n        {(note) ? (<div class=\"wq--note\">{note}</div>) : null}\r\n        {(message) ? (<div class=\"wq--message wq-lct-enabled\" oncreate={tnOnCreate} onremove={tnOnRemove}>{message}</div>) : null}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["$8ed3ba04fc179cbe$export$dda1d9f60106f0e9","name","attributes","rest","children","length","arguments","push","node","pop","nodeName","key","$8ed3ba04fc179cbe$export$729c8b7179294ba","state","actions","view","container","skipRender","map","rootElement","oldNode","recycleElement","element","toLowerCase","call","childNodes","nodeType","nodeValue","lifecycle","isRecycling","globalState","clone","wiredActions","wireStateToActions","path","action","data","result","getPartialState","then","scheduleRender","setPartialState","concat","resolveNode","render","patch","setTimeout","target","source","out","i","value","slice","getKey","eventListener","event","currentTarget","events","type","updateAttribute","oldValue","isSvg","style","cssText","setProperty","addEventListener","removeEventListener","setAttribute","removeAttribute","createElement","document","createTextNode","createElementNS","oncreate","appendChild","removeChildren","ondestroy","removeElement","parent","done","removeChild","cb","onremove","newElement","insertBefore","oldAttributes","onupdate","updateElement","oldKeyed","newKeyed","oldElements","oldChildren","oldKey","k","newKey","keyedNode","$85d6f971d9f8aabf$var$YubinBango","YubinBango","Core","$85d6f971d9f8aabf$var$CACHE","inputVal","callback","this","URL","REGION","c","replace","s","String","fromCharCode","charCodeAt","match","join","yubin7","chk7","getAddr","addrDic","prototype","val","region_id","region","locality","street","extended","selectAddr","addr","jsonp","url","fn","window","scriptTag","head","_this","yubin3","substr","$85d6f971d9f8aabf$exports","module","number","decimals","decPoint","thousandsSep","n","isFinite","prec","Math","abs","sep","dec","indexOf","round","arr","split","sig","toFixed","toFixedFix","toString","Array","$e63bd2793d1e4314$var$_number_format","parcelRequire","tnOnCreate","el","classList","add","remove","h","ev","tnOnRemove","doneCalled","Image","_ref","src","_ref$scaling","scaling","_ref$alt","alt","_ref$xclass","xclass","backgroundImage","class","title","_ref2","size","placeholder","_ref2$invalid","invalid","oninput","onblur","_ref2$xclass","isInvalid","id","_ref3","_ref3$size","_ref3$invalid","_ref3$xclass","_ref4","index","checked","_ref4$invalid","onchange","_ref4$xclass","_ref4$inputXclass","inputXclass","for","_ref5","_ref5$invalid","_ref5$xclass","_ref5$id","_ref5$inputXclass","_ref6","options","_ref6$invalid","_ref6$xclass","_ref6$inputXclass","$a1205777b5d508f1$var$_defineProperty","disabled","selected","o","_ref7","min","max","step","_ref7$invalid","_ref7$xclass","_ref7$suffix","suffix","_ref7$inputXclass","steps","_ref8","extensions","multiple","_ref8$invalid","_ref8$inputProps","inputProps","_ref8$xclass","_ref8$inputXclass","props","$a1205777b5d508f1$var$_objectWithoutProperties","$a1205777b5d508f1$var$_excluded","accept","trim","inputId","$a1205777b5d508f1$var$_extends","_ref9","loading","ondelete","deleteText","_ref9$readonly","readonly","$a1205777b5d508f1$var$_excluded2","viewable","lastIndexOf","ext","isViewable","$a1205777b5d508f1$var$Image","$a1205777b5d508f1$var$Button","onclick","_ref10","glue","_ref10$xclass","lines","isArray","reduce","line","Button","_ref11","_ref11$type","_ref11$disabled","_ref11$xclass","_ref11$name","$a1205777b5d508f1$var$_excluded3","_ref12","_ref12$gutter","gutter","_ref12$xclass","_ref13","input","label","required","message","note","requiredText","_ref13$xclass","_ref13$id","_ref13$key","$e63bd2793d1e4314$var$sprintf","format","f1","f2","nf","args","offset","trunc","x","ceil","floor","amount","$e63bd2793d1e4314$var$rule","taxPrecision","$e63bd2793d1e4314$var$catalog","$e63bd2793d1e4314$var$br","_Tv","_T","$e63bd2793d1e4314$var$_Tv","$e63bd2793d1e4314$var$_T","br","cur","$e63bd2793d1e4314$var$_toConsumableArray","hasOwnProperty","console","ast","isNaN","vars","total","labels","env","expr","evl","findByProp","findQuantity","v","$e63bd2793d1e4314$var$findByProp","ref","q","$e63bd2793d1e4314$var$findQuantity","guard","msg","b","pow","a","_b","_c","_b2","b0","_b4","_a3","_a4","_a5","_a6","d","_b5","_a7","_b6","_a8","_i","_b7","_a9","_i2","NaN","ex","r","scrollTo","documentElement","scrollTop","$e63bd2793d1e4314$var$scrollTo","pos","behavior","smoothScroll","body","getElementById","posTop","getBoundingClientRect","requestAnimationFrame","top","posBot","Object","_diff","$e63bd2793d1e4314$var$focusErrorInput","prefix","ms","log","keys","elem","focus","ids","querySelector","len","findIndexByProp","$e63bd2793d1e4314$var$satisfied","set","specs","extend","copy","prop","$e63bd2793d1e4314$var$extend","$e63bd2793d1e4314$var$_objectSpread","exclude","$e63bd2793d1e4314$var$exclude","branchNo","fragment","parseInt","replaceElement","arr2","off","idx","lis","$e63bd2793d1e4314$var$indexOf","e","reduceHash","hash","$e63bd2793d1e4314$var$reduceHash","f","fromTo","$e63bd2793d1e4314$var$emptyString","price","rule","compare2","lower","lowerIncluded","higherIncluded","higher","jQuery","submitUrl","contentType","inputs","qid","enabled","satisfied","item","$e63bd2793d1e4314$var$form","detailItems","navigator","depends","initial","$e63bd2793d1e4314$var$Option","selectid","option","iname","image","pricePrefix","priceSuffix","QuantOption","$e63bd2793d1e4314$var$pricePrefix","$e63bd2793d1e4314$var$nf","normalPrice","$e63bd2793d1e4314$var$priceSuffix","ribbons","from","to","$e63bd2793d1e4314$var$fromTo","minimum","maximum","Selector","onoptionchange","selectedOptions","$e63bd2793d1e4314$var$Selector","selector","$a1205777b5d508f1$exports","Quantity","$e63bd2793d1e4314$var$QuantOption","quantity","InputGroup","Slider","TextInput","slider","HNavigator","Range","form","ontextinput","ontextblur","onrangeblur","messages","some","$e63bd2793d1e4314$var$Quantity","suspendOtherSurfaces","$e63bd2793d1e4314$var$Slider","resumeOtherSurfaces","overlayOnCreate","overlayOnRemove","$e63bd2793d1e4314$var$overlayOnCreate","current2","$e63bd2793d1e4314$var$overlayOnRemove","originalOnoptionchange","onWizardNext","onWizardPrev","onWizardOpen","onWizardClose","current","open","flipped","messageValues","values","findPrevIndex","Monitor","detailsState","doSidebar","left","monitorPos","width","typr","$e63bd2793d1e4314$var$Monitor","totalwt","defaultTax","confirming","spShown","onHide","wqData","sidebarSelector","taxIncluded","details","detail","sprintf","normalizePrice","taxRate","normalUnitPrice","unitPrice","$e63bd2793d1e4314$var$normalizePrice","subtotal","normalTotal","tax","taxes","attrItem_table","MSG_REQUIRED","MSG_INVALID","MSG_TOCHECK","MSG_TOSELECT","MSG_DIFFERENT","MSG_TOOSMALL","MSG_TOOLARGE","MSG_HIRAGANA","MSG_KATAKANA","MSG_UPLOADING","$e63bd2793d1e4314$var$MSG_REQUIRED","Name","divided","names","Control","compile","hiraganaPattern","validate","pattern","$e63bd2793d1e4314$var$attrItem_table","katakanaPattern","createActions","$e63bd2793d1e4314$var$MSG_HIRAGANA","$e63bd2793d1e4314$var$branchNo","_actions","$e63bd2793d1e4314$var$MSG_KATAKANA","_message","Email","repeated","initialState","$e63bd2793d1e4314$var$replaceElement","$e63bd2793d1e4314$var$MSG_INVALID","Tel","phs","_name","every","emptyString","Address","_item","_ref14","curval","autoFill","RegExp","zip","_ref15","fs","_ref16","Checkbox","_ref17","$e63bd2793d1e4314$var$MSG_TOCHECK","Radio","opt","RadioButton","filter","vs","$e63bd2793d1e4314$var$MSG_TOSELECT","_ref18","Dropdown","_value","MultiCheckbox","_ref19","initialValue","_ref20","v0","Text","multiline","TextArea","reCAPTCHA3","siteKey","postfix","token","_state","grecaptcha","execute","File","FileInput","file","dragover","ondragleave","onDragLeave","onDrop","_key","onDelete","_ref21","$e63bd2793d1e4314$var$_objectWithoutProperties","$e63bd2793d1e4314$var$_excluded","onChange","uploadId","dataset","getTime","files","confirm","results","splice","Date","aformsUpload","onChangeK","serverMsg","alert","_ref22","urls","forEach","preventDefault","assembleAttrItems","_process4","cState","cActions","category","effectiveTotal","_env","_form$detailItems$red","subtotals","rv","$e63bd2793d1e4314$var$_excluded2","quantity0","$e63bd2793d1e4314$var$_defineProperty","_labels","$e63bd2793d1e4314$var$createDetail","evalExpr","$e63bd2793d1e4314$var$evalExpr","priceAst","priceVars","Adjustment","createDetail","PriceWatcher","QuantityWatcher","validateDetailDataForItem","validate_table","detailData","validateDetailData","attrs","$e63bd2793d1e4314$var$validate_table","Stop","allowFraction","parseFloat","$e63bd2793d1e4314$var$MSG_TOOSMALL","$e63bd2793d1e4314$var$MSG_TOOLARGE","selectChange","others","_ref24","$e63bd2793d1e4314$var$_excluded3","_ev$target$dataset$pa2","$e63bd2793d1e4314$var$_slicedToArray","sid","oid","_selectedOptions","activeElement","_process","$e63bd2793d1e4314$var$_excluded4","textBlur","_ref25","$e63bd2793d1e4314$var$_excluded5","_ref26","$e63bd2793d1e4314$var$_excluded6","process","_process2","$e63bd2793d1e4314$var$_excluded7","rangeBlur","createDetailState","_ref27","$e63bd2793d1e4314$var$_excluded8","onback","stt","viewMode","attrMessages","_validateDetailData","Auto","stopMessage","detailMessages","$e63bd2793d1e4314$var$_excluded11","attrItems","$e63bd2793d1e4314$var$validateAttrData","cid","extId","kontinue","mode","formId","submit","waitCount","compiledAttrs","$e63bd2793d1e4314$var$mode","ajax","dataType","JSON","stringify","complementAddress","YubinBangoCore","response","xhr","$e63bd2793d1e4314$var$submitCustom","onactionK","$e63bd2793d1e4314$var$submitUrl","submitCustom","customUrl","$e63bd2793d1e4314$var$submit","dataValue","handleOption","aformsDialog","resp","location","res","_x","href","clearLoading","$e63bd2793d1e4314$var$onHideMonitor","findNextIndex","spMonitorShown","indice","wIndex","wIndex2","wizardOpen","wFlipped","$e63bd2793d1e4314$var$findNextIndex","$e63bd2793d1e4314$var$validateDetailDataForItem","onWizardNextK","calcMonitorPos","onWizardPrevK","crect","srect","sidebar","$e63bd2793d1e4314$var$onWizardPrevK","sidebarOffset","vtop","$e63bd2793d1e4314$var$sidebarOffset","onscroll","ch","onresize","$e63bd2793d1e4314$var$calcMonitorPos","$e63bd2793d1e4314$var$onresize","$e63bd2793d1e4314$var$NavBar","_ref28","percentage","position","actionSpecs","actionButtons","onShowMonitor","$e63bd2793d1e4314$var$actionSpecMap","spec","buttonType","novalidate","$e63bd2793d1e4314$var$HNavigator","textInput","$e63bd2793d1e4314$var$WNavigator","onHideMonitor","catalog","actionSpecMap","init","validateAttrData","Echo","$e63bd2793d1e4314$var$viewAttrItemsToConfirm","$e63bd2793d1e4314$var$viewAttrItems","$e63bd2793d1e4314$var$_catalog$$S$split2","_ref23","viewAttrItems","viewAttrItemsToConfirm","_assembleAttrItems","$e63bd2793d1e4314$var$process","onaction","allActions","$e63bd2793d1e4314$var$onShowMonitor"],"version":3,"file":"front.js.map"}